<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structtcpc__driver__api" kind="struct" language="C++" prot="public">
    <compoundname>tcpc_driver_api</compoundname>
    <includes refid="usbc__tcpc_8h" local="no">usbc_tcpc.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structtcpc__driver__api_1a00ee20f4d78ec1e337b614afdfa3a686" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::init) (const struct device *dev)</definition>
        <argsstring>)(const struct device *dev)</argsstring>
        <name>init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="125" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1ae4b2588a327da51b961d7a00159e5aab" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::get_cc) (const struct device *dev, enum tc_cc_voltage_state *cc1, enum tc_cc_voltage_state *cc2)</definition>
        <argsstring>)(const struct device *dev, enum tc_cc_voltage_state *cc1, enum tc_cc_voltage_state *cc2)</argsstring>
        <name>get_cc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="126" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1ab7b283d0d38b609e347a5bb0b1be8950" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* tcpc_driver_api::set_vbus_measure_cb) (const struct device *dev, tcpc_vbus_cb_t vbus_cb)</definition>
        <argsstring>)(const struct device *dev, tcpc_vbus_cb_t vbus_cb)</argsstring>
        <name>set_vbus_measure_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="128" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a764814405c9339edc5084c8892740267" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* tcpc_driver_api::set_discharge_vbus_cb) (const struct device *dev, tcpc_discharge_vbus_cb_t discharge_vbus_cb)</definition>
        <argsstring>)(const struct device *dev, tcpc_discharge_vbus_cb_t discharge_vbus_cb)</argsstring>
        <name>set_discharge_vbus_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="129" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1aed5778bd37c6b8bee2b531458bffca5c" prot="public" static="no" mutable="no">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref>(*</type>
        <definition>bool(* tcpc_driver_api::check_vbus_level) (const struct device *dev, enum tc_vbus_level level)</definition>
        <argsstring>)(const struct device *dev, enum tc_vbus_level level)</argsstring>
        <name>check_vbus_level</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="131" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1adb6c5777a90065185e7c2a2d779a3296" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::get_vbus) (const struct device *dev, int *vbus_meas)</definition>
        <argsstring>)(const struct device *dev, int *vbus_meas)</argsstring>
        <name>get_vbus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="132" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a1eb311c296cfce9759d0f3137210fe6f" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::select_rp_value) (const struct device *dev, enum tc_rp_value rp)</definition>
        <argsstring>)(const struct device *dev, enum tc_rp_value rp)</argsstring>
        <name>select_rp_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="133" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1ad3fe740a7b85807242c03b6f32a7dea7" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::get_rp_value) (const struct device *dev, enum tc_rp_value *rp)</definition>
        <argsstring>)(const struct device *dev, enum tc_rp_value *rp)</argsstring>
        <name>get_rp_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="134" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a4263d2b2b1e1e2002c09ef2ecb3c5a36" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::set_cc) (const struct device *dev, enum tc_cc_pull pull)</definition>
        <argsstring>)(const struct device *dev, enum tc_cc_pull pull)</argsstring>
        <name>set_cc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="135" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1ad6b5fb88b0b39fd29584c2a2de685c20" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* tcpc_driver_api::set_vconn_cb) (const struct device *dev, tcpc_vconn_control_cb_t vconn_cb)</definition>
        <argsstring>)(const struct device *dev, tcpc_vconn_control_cb_t vconn_cb)</argsstring>
        <name>set_vconn_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="136" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a639486f042727c23781e90d725ac17fc" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::set_vconn) (const struct device *dev, bool enable)</definition>
        <argsstring>)(const struct device *dev, bool enable)</argsstring>
        <name>set_vconn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="137" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a43d110db7d4808939d24850f2c6a73be" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::set_roles) (const struct device *dev, enum tc_power_role power_role, enum tc_data_role data_role)</definition>
        <argsstring>)(const struct device *dev, enum tc_power_role power_role, enum tc_data_role data_role)</argsstring>
        <name>set_roles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="138" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a5e912815555f4a8111045a57c4fa18b3" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::receive_data) (const struct device *dev, struct pd_msg *msg)</definition>
        <argsstring>)(const struct device *dev, struct pd_msg *msg)</argsstring>
        <name>receive_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="140" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a555a68fc6892135e35a26627e5e730bf" prot="public" static="no" mutable="no">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref>(*</type>
        <definition>bool(* tcpc_driver_api::is_rx_pending_msg) (const struct device *dev, enum pd_packet_type *type)</definition>
        <argsstring>)(const struct device *dev, enum pd_packet_type *type)</argsstring>
        <name>is_rx_pending_msg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="141" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a3440cc5751b0820b7fd7f4c288089e23" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::set_rx_enable) (const struct device *dev, bool enable)</definition>
        <argsstring>)(const struct device *dev, bool enable)</argsstring>
        <name>set_rx_enable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="142" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a7bbd6583cfc43ac235333aad93cc79e3" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::set_cc_polarity) (const struct device *dev, enum tc_cc_polarity polarity)</definition>
        <argsstring>)(const struct device *dev, enum tc_cc_polarity polarity)</argsstring>
        <name>set_cc_polarity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="143" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1abffc63aa90730025fae61891cb228cd4" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::transmit_data) (const struct device *dev, struct pd_msg *msg)</definition>
        <argsstring>)(const struct device *dev, struct pd_msg *msg)</argsstring>
        <name>transmit_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="144" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a11ecbb4c78aecb278e1a3568d032c05a" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::dump_std_reg) (const struct device *dev)</definition>
        <argsstring>)(const struct device *dev)</argsstring>
        <name>dump_std_reg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="145" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a271fc8d67338a4e7384d4f938026a5f3" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* tcpc_driver_api::alert_handler_cb) (const struct device *dev, void *data, enum tcpc_alert alert)</definition>
        <argsstring>)(const struct device *dev, void *data, enum tcpc_alert alert)</argsstring>
        <name>alert_handler_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="146" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1aa3d97fe5bc52b144a22551e38867fd2e" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::get_status_register) (const struct device *dev, enum tcpc_status_reg reg, int32_t *status)</definition>
        <argsstring>)(const struct device *dev, enum tcpc_status_reg reg, int32_t *status)</argsstring>
        <name>get_status_register</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="147" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a45a1d895153d5e7182313a15e6908df0" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::clear_status_register) (const struct device *dev, enum tcpc_status_reg reg, uint32_t mask)</definition>
        <argsstring>)(const struct device *dev, enum tcpc_status_reg reg, uint32_t mask)</argsstring>
        <name>clear_status_register</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="149" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1ac8750dd530c23a02e548b8b01c8abda3" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::mask_status_register) (const struct device *dev, enum tcpc_status_reg reg, uint32_t mask)</definition>
        <argsstring>)(const struct device *dev, enum tcpc_status_reg reg, uint32_t mask)</argsstring>
        <name>mask_status_register</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="151" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a548ff24fef31a25f4fca5d6e00f50684" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::set_discharge_vbus) (const struct device *dev, bool enable)</definition>
        <argsstring>)(const struct device *dev, bool enable)</argsstring>
        <name>set_discharge_vbus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="153" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a4eeb509ed1a700dfe3bb930c3cc537af" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::enable_auto_discharge_disconnect) (const struct device *dev, bool enable)</definition>
        <argsstring>)(const struct device *dev, bool enable)</argsstring>
        <name>enable_auto_discharge_disconnect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="154" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a0bd24553cc59c3947f6ec634a2a611e0" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::set_debug_accessory) (const struct device *dev, bool enable)</definition>
        <argsstring>)(const struct device *dev, bool enable)</argsstring>
        <name>set_debug_accessory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="155" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1ad3d06d75563e7a8f00a9a61fe279a6bc" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::set_debug_detach) (const struct device *dev)</definition>
        <argsstring>)(const struct device *dev)</argsstring>
        <name>set_debug_detach</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="156" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1aed51c3046411854b7be470d761e77faa" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::set_drp_toggle) (const struct device *dev, bool enable)</definition>
        <argsstring>)(const struct device *dev, bool enable)</argsstring>
        <name>set_drp_toggle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="157" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a4e69b9bcd2c298361c21ed91de786cb8" prot="public" static="no" mutable="no">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref>(*</type>
        <definition>bool(* tcpc_driver_api::get_snk_ctrl) (const struct device *dev)</definition>
        <argsstring>)(const struct device *dev)</argsstring>
        <name>get_snk_ctrl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="158" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a9e7667a2a133d3d45c645263c361016f" prot="public" static="no" mutable="no">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref>(*</type>
        <definition>bool(* tcpc_driver_api::get_src_ctrl) (const struct device *dev)</definition>
        <argsstring>)(const struct device *dev)</argsstring>
        <name>get_src_ctrl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="159" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a9ddaaae8e34bf36e868908d7555514dd" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::get_chip_info) (const struct device *dev, struct tcpc_chip_info *chip_info)</definition>
        <argsstring>)(const struct device *dev, struct tcpc_chip_info *chip_info)</argsstring>
        <name>get_chip_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="160" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1ac70604b14dd7fe966489c159e1b3433d" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::set_low_power_mode) (const struct device *dev, bool enable)</definition>
        <argsstring>)(const struct device *dev, bool enable)</argsstring>
        <name>set_low_power_mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="161" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1a4402729135c40bbf30a18c148134b34c" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::sop_prime_enable) (const struct device *dev, bool enable)</definition>
        <argsstring>)(const struct device *dev, bool enable)</argsstring>
        <name>sop_prime_enable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="162" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1afba03924bd5b3f62733309b9a0084552" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::set_bist_test_mode) (const struct device *dev, bool enable)</definition>
        <argsstring>)(const struct device *dev, bool enable)</argsstring>
        <name>set_bist_test_mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="163" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtcpc__driver__api_1adc0c8e5f174549fb7683028c58e890bd" prot="public" static="no" mutable="no">
        <type>int(*</type>
        <definition>int(* tcpc_driver_api::set_alert_handler_cb) (const struct device *dev, tcpc_alert_handler_cb_t handler, void *data)</definition>
        <argsstring>)(const struct device *dev, tcpc_alert_handler_cb_t handler, void *data)</argsstring>
        <name>set_alert_handler_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="164" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/drivers/usbc/usbc_tcpc.h" line="124" column="12" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="124" bodyend="166"/>
    <listofallmembers>
      <member refid="structtcpc__driver__api_1a271fc8d67338a4e7384d4f938026a5f3" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>alert_handler_cb</name></member>
      <member refid="structtcpc__driver__api_1aed5778bd37c6b8bee2b531458bffca5c" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>check_vbus_level</name></member>
      <member refid="structtcpc__driver__api_1a45a1d895153d5e7182313a15e6908df0" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>clear_status_register</name></member>
      <member refid="structtcpc__driver__api_1a11ecbb4c78aecb278e1a3568d032c05a" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>dump_std_reg</name></member>
      <member refid="structtcpc__driver__api_1a4eeb509ed1a700dfe3bb930c3cc537af" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>enable_auto_discharge_disconnect</name></member>
      <member refid="structtcpc__driver__api_1ae4b2588a327da51b961d7a00159e5aab" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>get_cc</name></member>
      <member refid="structtcpc__driver__api_1a9ddaaae8e34bf36e868908d7555514dd" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>get_chip_info</name></member>
      <member refid="structtcpc__driver__api_1ad3fe740a7b85807242c03b6f32a7dea7" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>get_rp_value</name></member>
      <member refid="structtcpc__driver__api_1a4e69b9bcd2c298361c21ed91de786cb8" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>get_snk_ctrl</name></member>
      <member refid="structtcpc__driver__api_1a9e7667a2a133d3d45c645263c361016f" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>get_src_ctrl</name></member>
      <member refid="structtcpc__driver__api_1aa3d97fe5bc52b144a22551e38867fd2e" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>get_status_register</name></member>
      <member refid="structtcpc__driver__api_1adb6c5777a90065185e7c2a2d779a3296" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>get_vbus</name></member>
      <member refid="structtcpc__driver__api_1a00ee20f4d78ec1e337b614afdfa3a686" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>init</name></member>
      <member refid="structtcpc__driver__api_1a555a68fc6892135e35a26627e5e730bf" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>is_rx_pending_msg</name></member>
      <member refid="structtcpc__driver__api_1ac8750dd530c23a02e548b8b01c8abda3" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>mask_status_register</name></member>
      <member refid="structtcpc__driver__api_1a5e912815555f4a8111045a57c4fa18b3" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>receive_data</name></member>
      <member refid="structtcpc__driver__api_1a1eb311c296cfce9759d0f3137210fe6f" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>select_rp_value</name></member>
      <member refid="structtcpc__driver__api_1adc0c8e5f174549fb7683028c58e890bd" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>set_alert_handler_cb</name></member>
      <member refid="structtcpc__driver__api_1afba03924bd5b3f62733309b9a0084552" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>set_bist_test_mode</name></member>
      <member refid="structtcpc__driver__api_1a4263d2b2b1e1e2002c09ef2ecb3c5a36" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>set_cc</name></member>
      <member refid="structtcpc__driver__api_1a7bbd6583cfc43ac235333aad93cc79e3" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>set_cc_polarity</name></member>
      <member refid="structtcpc__driver__api_1a0bd24553cc59c3947f6ec634a2a611e0" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>set_debug_accessory</name></member>
      <member refid="structtcpc__driver__api_1ad3d06d75563e7a8f00a9a61fe279a6bc" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>set_debug_detach</name></member>
      <member refid="structtcpc__driver__api_1a548ff24fef31a25f4fca5d6e00f50684" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>set_discharge_vbus</name></member>
      <member refid="structtcpc__driver__api_1a764814405c9339edc5084c8892740267" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>set_discharge_vbus_cb</name></member>
      <member refid="structtcpc__driver__api_1aed51c3046411854b7be470d761e77faa" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>set_drp_toggle</name></member>
      <member refid="structtcpc__driver__api_1ac70604b14dd7fe966489c159e1b3433d" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>set_low_power_mode</name></member>
      <member refid="structtcpc__driver__api_1a43d110db7d4808939d24850f2c6a73be" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>set_roles</name></member>
      <member refid="structtcpc__driver__api_1a3440cc5751b0820b7fd7f4c288089e23" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>set_rx_enable</name></member>
      <member refid="structtcpc__driver__api_1ab7b283d0d38b609e347a5bb0b1be8950" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>set_vbus_measure_cb</name></member>
      <member refid="structtcpc__driver__api_1a639486f042727c23781e90d725ac17fc" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>set_vconn</name></member>
      <member refid="structtcpc__driver__api_1ad6b5fb88b0b39fd29584c2a2de685c20" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>set_vconn_cb</name></member>
      <member refid="structtcpc__driver__api_1a4402729135c40bbf30a18c148134b34c" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>sop_prime_enable</name></member>
      <member refid="structtcpc__driver__api_1abffc63aa90730025fae61891cb228cd4" prot="public" virt="non-virtual"><scope>tcpc_driver_api</scope><name>transmit_data</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

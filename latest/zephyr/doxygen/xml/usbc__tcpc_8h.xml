<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="usbc__tcpc_8h" kind="file" language="C++">
    <compoundname>usbc_tcpc.h</compoundname>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includes local="no">device.h</includes>
    <includes refid="usbc__tc_8h" local="yes">usbc_tc.h</includes>
    <includes refid="usbc__pd_8h" local="yes">usbc_pd.h</includes>
    <incdepgraph>
      <node id="5">
        <label>device.h</label>
      </node>
      <node id="2">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>usbc_tc.h</label>
        <link refid="usbc__tc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>usbc_pd.h</label>
        <link refid="usbc__pd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="1">
        <label>include/drivers/usbc/usbc_tcpc.h</label>
        <link refid="usbc__tcpc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structtcpc__chip__info" prot="public">tcpc_chip_info</innerclass>
    <innerclass refid="structtcpc__driver__api" prot="public">tcpc_driver_api</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__usb__type__c__port__controller__api_1ga4687047910cad0dd970bbd28adcf22ed" prot="public" static="no" strong="no">
        <type></type>
        <name>tcpc_alert</name>
        <enumvalue id="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda30b8a2c88cc2309849efa9d478271a3f" prot="public">
          <name>TCPC_ALERT_CC_STATUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CC status changed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edabbce6e484dc5373597097a664a6b5af4" prot="public">
          <name>TCPC_ALERT_POWER_STATUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Power status changed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda57eedbbbb9b1d899e1607e25c2799eeb" prot="public">
          <name>TCPC_ALERT_MSG_STATUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive Buffer register changed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda61c51ceb776d0432c657f6c16d5595e0" prot="public">
          <name>TCPC_ALERT_HARD_RESET_RECEIVED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Received Hard Reset message </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edadff8e9cab783e22eedad2971baae77ec" prot="public">
          <name>TCPC_ALERT_TRANSMIT_MSG_FAILED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SOP* message transmission not successful </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda302c30d41b09b4bf1949ce0c945c71fe" prot="public">
          <name>TCPC_ALERT_TRANSMIT_MSG_DISCARDED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset or SOP* message transmission not sent due to an incoming receive message </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda642e2b837d88dc983177546a06d938b2" prot="public">
          <name>TCPC_ALERT_TRANSMIT_MSG_SUCCESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Reset or SOP* message transmission successful </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda64f5af2ef616a1adf90ff3549a114a66" prot="public">
          <name>TCPC_ALERT_VBUS_ALARM_HI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A high-voltage alarm has occurred </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edac44bb12fb7bd9de2f49af7d5f72744b0" prot="public">
          <name>TCPC_ALERT_VBUS_ALARM_LO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A low-voltage alarm has occurred </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edacd3a5188b6be126dfd00a4676e2a768e" prot="public">
          <name>TCPC_ALERT_FAULT_STATUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A fault has occurred. Read the FAULT_STATUS register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edaefb353c046fa8346a4736d02a3003752" prot="public">
          <name>TCPC_ALERT_RX_BUFFER_OVERFLOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>TCPC RX buffer has overflowed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda8aa0d4566f11e6079f59500ac03929cd" prot="public">
          <name>TCPC_ALERT_VBUS_SNK_DISCONNECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The TCPC in Attached.SNK state has detected a sink disconnect </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda449d3f9271aa42feb43e54a1f36114eb" prot="public">
          <name>TCPC_ALERT_BEGINNING_MSG_STATUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Receive buffer register changed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda284b478e32999fd923ba3064088274a9" prot="public">
          <name>TCPC_ALERT_EXTENDED_STATUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Extended status changed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda4356cb85ef371e72badad22110172e25" prot="public">
          <name>TCPC_ALERT_EXTENDED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An extended interrupt event has occurred. Read the alert_extended register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edac5675390dfba5276227ff8d2be783992" prot="public">
          <name>TCPC_ALERT_VENDOR_DEFINED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A vendor defined alert has been detected </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TCPC Alert bits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="38" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="38" bodyend="77"/>
      </memberdef>
      <memberdef kind="enum" id="group__usb__type__c__port__controller__api_1gafd8253dfa6abc80d0717b17271ed8916" prot="public" static="no" strong="no">
        <type></type>
        <name>tcpc_status_reg</name>
        <enumvalue id="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916aaf41a51cc8e4c849780af463ea63a0c4" prot="public">
          <name>TCPC_CC_STATUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The CC Status register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916aa42f110436df796f5cfdadab921aac7f" prot="public">
          <name>TCPC_POWER_STATUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The Power Status register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916a14723bbaaae32413e2399159a6def440" prot="public">
          <name>TCPC_FAULT_STATUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The Fault Status register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916afe72a3bc04d7f92bd74e754129e99c6d" prot="public">
          <name>TCPC_EXTENDED_STATUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The Extended Status register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916a5e15cc2aae46edf6b7e0f5316b37a9db" prot="public">
          <name>TCPC_EXTENDED_ALERT_STATUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The Extended Alert Status register </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916a45f424f2f0e126085d3e49e0cc4d7c61" prot="public">
          <name>TCPC_VENDOR_DEFINED_STATUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The Vendor Defined Status register </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TCPC Status register. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="82" column="1" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="82" bodyend="95"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__usb__type__c__port__controller__api_1gaf633b9bdc7bd342c461c996ff3a646f2" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* tcpc_vbus_cb_t) (const struct device *dev, int *vbus_meas)</definition>
        <argsstring>)(const struct device *dev, int *vbus_meas)</argsstring>
        <name>tcpc_vbus_cb_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="118" column="8" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__usb__type__c__port__controller__api_1gaea89d79b0e15b647f4aa1f32f4f1ddd0" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* tcpc_discharge_vbus_cb_t) (const struct device *dev, bool enable)</definition>
        <argsstring>)(const struct device *dev, bool enable)</argsstring>
        <name>tcpc_discharge_vbus_cb_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="119" column="8" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__usb__type__c__port__controller__api_1ga88ffc0a13061f46810dfdcaab7c7caf2" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* tcpc_vconn_control_cb_t) (const struct device *dev, bool enable)</definition>
        <argsstring>)(const struct device *dev, bool enable)</argsstring>
        <name>tcpc_vconn_control_cb_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="120" column="8" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__usb__type__c__port__controller__api_1ga5f42fa12f90d34961eeeb67c0dc4f925" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* tcpc_alert_handler_cb_t) (const struct device *dev, void *data, enum tcpc_alert alert)</definition>
        <argsstring>)(const struct device *dev, void *data, enum tcpc_alert alert)</argsstring>
        <name>tcpc_alert_handler_cb_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="121" column="9" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga6dfd68915ffe093058f6187b770a2436" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_is_cc_rp</definition>
        <argsstring>(enum tc_cc_voltage_state cc)</argsstring>
        <name>tcpc_is_cc_rp</name>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref></type>
          <declname>cc</declname>
        </param>
        <briefdescription>
<para>Returns whether the sink has detected a Rp resistor on the other side. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="171" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="171" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga0db896e395812603a03548b8faac6791" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_is_cc_open</definition>
        <argsstring>(enum tc_cc_voltage_state cc1, enum tc_cc_voltage_state cc2)</argsstring>
        <name>tcpc_is_cc_open</name>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref></type>
          <declname>cc1</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref></type>
          <declname>cc2</declname>
        </param>
        <briefdescription>
<para>Returns true if both CC lines are completely open. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="180" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1gaa0d2059c3a53df986150141f73b9a98a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_is_cc_snk_dbg_acc</definition>
        <argsstring>(enum tc_cc_voltage_state cc1, enum tc_cc_voltage_state cc2)</argsstring>
        <name>tcpc_is_cc_snk_dbg_acc</name>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref></type>
          <declname>cc1</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref></type>
          <declname>cc2</declname>
        </param>
        <briefdescription>
<para>Returns true if we detect the port partner is a snk debug accessory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="189" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="189" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga03849a7a4fd7f468b18838c443d1ecd8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_is_cc_src_dbg_acc</definition>
        <argsstring>(enum tc_cc_voltage_state cc1, enum tc_cc_voltage_state cc2)</argsstring>
        <name>tcpc_is_cc_src_dbg_acc</name>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref></type>
          <declname>cc1</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref></type>
          <declname>cc2</declname>
        </param>
        <briefdescription>
<para>Returns true if we detect the port partner is a src debug accessory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="198" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="198" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga153054be89d5f21148fe3ee750c718ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_is_cc_audio_acc</definition>
        <argsstring>(enum tc_cc_voltage_state cc1, enum tc_cc_voltage_state cc2)</argsstring>
        <name>tcpc_is_cc_audio_acc</name>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref></type>
          <declname>cc1</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref></type>
          <declname>cc2</declname>
        </param>
        <briefdescription>
<para>Returns true if the port partner is an audio accessory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="207" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="207" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1gab4e9cc812679cf8cb0189f73a28d7cd2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_is_cc_at_least_one_rd</definition>
        <argsstring>(enum tc_cc_voltage_state cc1, enum tc_cc_voltage_state cc2)</argsstring>
        <name>tcpc_is_cc_at_least_one_rd</name>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref></type>
          <declname>cc1</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref></type>
          <declname>cc2</declname>
        </param>
        <briefdescription>
<para>Returns true if the port partner is presenting at least one Rd. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="216" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="216" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga91c3c40ea82ce5a081918183d8b76c06" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_is_cc_only_one_rd</definition>
        <argsstring>(enum tc_cc_voltage_state cc1, enum tc_cc_voltage_state cc2)</argsstring>
        <name>tcpc_is_cc_only_one_rd</name>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref></type>
          <declname>cc1</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref></type>
          <declname>cc2</declname>
        </param>
        <briefdescription>
<para>Returns true if the port partner is presenting Rd on only one CC line. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="225" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="225" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1gabc50daa9cc713b1d0e340007e3850ca8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_init</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>tcpc_init</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Initializes the TCPC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="239" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="239" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga66ab7a9f3cd1b80cd5bc8e99040c5627" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_get_cc</definition>
        <argsstring>(const struct device *dev, enum tc_cc_voltage_state *cc1, enum tc_cc_voltage_state *cc2)</argsstring>
        <name>tcpc_get_cc</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref> *</type>
          <declname>cc1</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref> *</type>
          <declname>cc2</declname>
        </param>
        <briefdescription>
<para>Reads the status of the CC lines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cc1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer where the CC1 status is written </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cc2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer where the CC2 status is written</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="261" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="261" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1gad3d6c83080da4bfa481c97c24de9f139" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tcpc_set_vbus_measure_cb</definition>
        <argsstring>(const struct device *dev, tcpc_vbus_cb_t vbus_cb)</argsstring>
        <name>tcpc_set_vbus_measure_cb</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="group__usb__type__c__port__controller__api_1gaf633b9bdc7bd342c461c996ff3a646f2" kindref="member">tcpc_vbus_cb_t</ref></type>
          <declname>vbus_cb</declname>
        </param>
        <briefdescription>
<para>Sets a callback that can measure the value of VBUS if the TCPC is unable to or the system is configured in a way that does not use the VBUS measurement and detection capabilities of the TCPC. </para>
        </briefdescription>
        <detaileddescription>
<para>The callback is called in tcpc_check_vbus_level and tcpc_get_vbus functions if vbus_cb isn&apos;t NULL.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vbus_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to callback function that returns a voltage measurement </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="287" column="20" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="287" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga7df0b3745c525f1cc0bf0325d745965f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tcpc_set_discharge_vbus_cb</definition>
        <argsstring>(const struct device *dev, tcpc_discharge_vbus_cb_t discharge_vbus_cb)</argsstring>
        <name>tcpc_set_discharge_vbus_cb</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="group__usb__type__c__port__controller__api_1gaea89d79b0e15b647f4aa1f32f4f1ddd0" kindref="member">tcpc_discharge_vbus_cb_t</ref></type>
          <declname>discharge_vbus_cb</declname>
        </param>
        <briefdescription>
<para>Sets a callback that can discharge VBUS if the TCPC is unable to or the system is configured in a way that does not use the discharge VBUS capabilities of the TCPC. </para>
        </briefdescription>
        <detaileddescription>
<para>The callback is called in tcpc_set_discharge_vbus functions if discharge_vbus_cb isn&apos;t NULL.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>discharge_vbus_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to callback function that discharges VBUS </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="310" column="20" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="310" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga082b09cd530983b1969e922ea1dedbe6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool tcpc_check_vbus_level</definition>
        <argsstring>(const struct device *dev, enum tc_vbus_level level)</argsstring>
        <name>tcpc_check_vbus_level</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga015455a6c5620dfc96cfb713bbb72161" kindref="member">tc_vbus_level</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Checks if VBUS is at a particular level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>The level voltage to check against</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if VBUS is at the level voltage </para>
</simplesect>
<simplesect kind="return"><para>false if VBUS is not at that level voltage </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="331" column="20" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="331" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga730866ea93305ae736adcc77d0ec3490" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_get_vbus</definition>
        <argsstring>(const struct device *dev, int *vbus_meas)</argsstring>
        <name>tcpc_get_vbus</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>vbus_meas</declname>
        </param>
        <briefdescription>
<para>Reads and returns VBUS measured in mV. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the TCPC to measure VBUS if possible or calls the callback function set by tcpc_set_vbus_measure_callback. In the event that the TCPC can measure VBUS and the VBUS callback measuring function is set, this function usess the callback function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vbus_meas</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer where the measured VBUS voltage is stored</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="357" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="357" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga3958eac0cc0b9b2ac782e0cdb235036c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_select_rp_value</definition>
        <argsstring>(const struct device *dev, enum tc_rp_value rp)</argsstring>
        <name>tcpc_select_rp_value</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga4e0eec97f7c5c97b87eff9561deea2d5" kindref="member">tc_rp_value</ref></type>
          <declname>rp</declname>
        </param>
        <briefdescription>
<para>Sets the value of CC pull up resistor used when operating as a Source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rp</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the Pull-Up Resistor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="378" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="378" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga25a110be90977e768623f3a0c9a222d5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_get_rp_value</definition>
        <argsstring>(const struct device *dev, enum tc_rp_value *rp)</argsstring>
        <name>tcpc_get_rp_value</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga4e0eec97f7c5c97b87eff9561deea2d5" kindref="member">tc_rp_value</ref> *</type>
          <declname>rp</declname>
        </param>
        <briefdescription>
<para>Gets the value of the CC pull up resistor used when operating as a Source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rp</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer where the value of the Pull-Up Resistor is stored</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="400" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="400" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1gac5737d02caa2b9e649b469bcd648440f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_set_cc</definition>
        <argsstring>(const struct device *dev, enum tc_cc_pull pull)</argsstring>
        <name>tcpc_set_cc</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga0200c820510eb786f3ca30a9b5f7aada" kindref="member">tc_cc_pull</ref></type>
          <declname>pull</declname>
        </param>
        <briefdescription>
<para>Sets the CC pull resistor and sets the role as either Source or Sink. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pull</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull resistor to set</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="421" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="421" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1gaa608f2c6627c4a9c3039f0ec1b238bbc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void tcpc_set_vconn_cb</definition>
        <argsstring>(const struct device *dev, tcpc_vconn_control_cb_t vconn_cb)</argsstring>
        <name>tcpc_set_vconn_cb</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="group__usb__type__c__port__controller__api_1ga88ffc0a13061f46810dfdcaab7c7caf2" kindref="member">tcpc_vconn_control_cb_t</ref></type>
          <declname>vconn_cb</declname>
        </param>
        <briefdescription>
<para>Sets a callback that can enable or disable VCONN if the TCPC is unable to or the system is configured in a way that does not use the VCONN control capabilities of the TCPC. </para>
        </briefdescription>
        <detaileddescription>
<para>The callback is called in the tcpc_set_vconn function if vconn_cb isn&apos;t NULL</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vconn_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the callback function that controls vconn </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="442" column="20" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="442" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga247f0ea91249753d6f5eefe006617e41" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_set_vconn</definition>
        <argsstring>(const struct device *dev, bool enable)</argsstring>
        <name>tcpc_set_vconn</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enables or disables VCONN. </para>
        </briefdescription>
        <detaileddescription>
<para>This function uses the TCPC to measure VCONN if possible or calls the callback function set by tcpc_set_vconn_cb</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>VCONN is enabled when true, it&apos;s disabled</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="467" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="467" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga8d30c961335f62faa33aa7d842422da0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_set_roles</definition>
        <argsstring>(const struct device *dev, enum tc_power_role power_role, enum tc_data_role data_role)</argsstring>
        <name>tcpc_set_roles</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c_1gaa6dda0612045b5f55b9d8ba63d2b9f9d" kindref="member">tc_power_role</ref></type>
          <declname>power_role</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c_1ga6b98bbe238e62cfd5531688494a63de2" kindref="member">tc_data_role</ref></type>
          <declname>data_role</declname>
        </param>
        <briefdescription>
<para>Sets the Power and Data Role of the PD message header. </para>
        </briefdescription>
        <detaileddescription>
<para>This function only needs to be called once per data / power role change</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>power_role</parametername>
</parameternamelist>
<parameterdescription>
<para>current power role </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_role</parametername>
</parameternamelist>
<parameterdescription>
<para>current data role</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="492" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="492" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga1ab0e57f1b3954d474e4dae307aa11b5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool tcpc_is_rx_pending_msg</definition>
        <argsstring>(const struct device *dev, enum pd_packet_type *type)</argsstring>
        <name>tcpc_is_rx_pending_msg</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__power__delivery_1gad2df13a24f0365198d37b10af608376b" kindref="member">pd_packet_type</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Tests if a received Power Delivery message is pending. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to where message type is written. Can be NULL</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if message is pending, else false </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="516" column="20" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="516" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga875559886f0793117c5f7eccea3979b0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_receive_data</definition>
        <argsstring>(const struct device *dev, struct pd_msg *buf)</argsstring>
        <name>tcpc_receive_data</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>struct <ref refid="structpd__msg" kindref="compound">pd_msg</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Retrieves the Power Delivery message from the TCPC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer where the pd_buf pointer is written</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Greater or equal to 0 is the number of bytes received </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-EFAULT on buf being NULL </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="540" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="540" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga905176a77ff127f4df8f6a4f2c61a1b7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_set_rx_enable</definition>
        <argsstring>(const struct device *dev, bool enable)</argsstring>
        <name>tcpc_set_rx_enable</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enables the reception of SOP* message types. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable Power Delivery when true, else it&apos;s disabled</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="564" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="564" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga53f0207ecb63011c6dfc3c298a841ed4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_set_cc_polarity</definition>
        <argsstring>(const struct device *dev, enum tc_cc_polarity polarity)</argsstring>
        <name>tcpc_set_cc_polarity</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c_1gac5b4b58840c9b076a869a5816ba100db" kindref="member">tc_cc_polarity</ref></type>
          <declname>polarity</declname>
        </param>
        <briefdescription>
<para>Sets the polarity of the CC lines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>polarity</parametername>
</parameternamelist>
<parameterdescription>
<para>Polarity of the cc line</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="585" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="585" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga8bf8fd202d582a4cc179a0fc4aff35e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_transmit_data</definition>
        <argsstring>(const struct device *dev, struct pd_msg *msg)</argsstring>
        <name>tcpc_transmit_data</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>struct <ref refid="structpd__msg" kindref="compound">pd_msg</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Transmits a Power Delivery message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Power Delivery message to transmit</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="607" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="607" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga91eef7084b523f1991e000f0592b8cbd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_dump_std_reg</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>tcpc_dump_std_reg</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Dump a set of TCPC registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="629" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="629" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga75f0dc246dac576f14c5ac51b45fd489" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_set_alert_handler_cb</definition>
        <argsstring>(const struct device *dev, tcpc_alert_handler_cb_t handler, void *data)</argsstring>
        <name>tcpc_set_alert_handler_cb</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="group__usb__type__c__port__controller__api_1ga5f42fa12f90d34961eeeb67c0dc4f925" kindref="member">tcpc_alert_handler_cb_t</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Sets the alert function that&apos;s called when an interrupt is triggered due to an alert bit. </para>
        </briefdescription>
        <detaileddescription>
<para>Calling this function enables the particular alert bit</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function called when the bit is set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>user data passed to the callback</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EINVAL on failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="654" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="654" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga41e81b8f83e06934a5eb984ae6f980ec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_get_status_register</definition>
        <argsstring>(const struct device *dev, enum tcpc_status_reg reg, int32_t *status)</argsstring>
        <name>tcpc_get_status_register</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c__port__controller__api_1gafd8253dfa6abc80d0717b17271ed8916" kindref="member">tcpc_status_reg</ref></type>
          <declname>reg</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref> *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Gets a status register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>The status register to read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer where the status is stored</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="678" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="678" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga00170b754d78d8eb7da24abd7d533e42" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_clear_status_register</definition>
        <argsstring>(const struct device *dev, enum tcpc_status_reg reg, uint32_t mask)</argsstring>
        <name>tcpc_clear_status_register</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c__port__controller__api_1gafd8253dfa6abc80d0717b17271ed8916" kindref="member">tcpc_status_reg</ref></type>
          <declname>reg</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Clears a TCPC status register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>The status register to read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A bit mask of the status register to clear. A status bit is cleared when it&apos;s set to 1.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="704" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="704" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga0d1868d555e99877e062fb7135d9db8f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_mask_status_register</definition>
        <argsstring>(const struct device *dev, enum tcpc_status_reg reg, uint32_t mask)</argsstring>
        <name>tcpc_mask_status_register</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>enum <ref refid="group__usb__type__c__port__controller__api_1gafd8253dfa6abc80d0717b17271ed8916" kindref="member">tcpc_status_reg</ref></type>
          <declname>reg</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Sets the mask of a TCPC status register. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>The status register to read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>A bit mask of the status register to mask. The status bit is masked if it&apos;s 0, else it&apos;s unmasked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="730" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="730" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga0a04473fe22efe368b6b93f4a481d490" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_set_discharge_vbus</definition>
        <argsstring>(const struct device *dev, bool enable)</argsstring>
        <name>tcpc_set_discharge_vbus</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enables discharge TypeC VBUS on Source / Sink disconnect and power role swap. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>The TypeC VBUS is discharged on disconnect or power role swap when true</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="756" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="756" bodyend="766"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga9dbf0d49edd810f75775272e84e42b0a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_enable_auto_discharge_disconnect</definition>
        <argsstring>(const struct device *dev, bool enable)</argsstring>
        <name>tcpc_enable_auto_discharge_disconnect</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>TCPC automatically discharge TypeC VBUS on Source / Sink disconnect an power role swap. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>The TCPC automatically discharges VBUS on disconnect or power role swap</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="780" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="780" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga01687aa218b25ba137e994a2a55bce23" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_set_debug_accessory</definition>
        <argsstring>(const struct device *dev, bool enable)</argsstring>
        <name>tcpc_set_debug_accessory</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Manual control of TCPC DebugAccessory control. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable Debug Accessory when true, else it&apos;s disabled</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="803" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="803" bodyend="814"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1gaaa38e56e6bc8c41e936d8ed70aaa8a23" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_set_debug_detach</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>tcpc_set_debug_detach</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Detach from a debug connection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="825" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="825" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1gaa06e156bef46ff3f70cc8c302ddf0a4d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_set_drp_toggle</definition>
        <argsstring>(const struct device *dev, bool enable)</argsstring>
        <name>tcpc_set_drp_toggle</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable TCPC auto dual role toggle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Auto dual role toggle is active when true, else it&apos;s disabled</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="847" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="847" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1gaa5e5faf410d7189d861bf0ae888bdf06" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool tcpc_get_snk_ctrl</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>tcpc_get_snk_ctrl</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Queries the current sinking state of the TCPC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if sinking power </para>
</simplesect>
<simplesect kind="return"><para>false if not sinking power </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="868" column="20" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="868" bodyend="878"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga12142e950ad17b868b0f933eea0c266e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool tcpc_get_src_ctrl</definition>
        <argsstring>(const struct device *dev)</argsstring>
        <name>tcpc_get_src_ctrl</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Queries the current sourcing state of the TCPC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if sourcing power </para>
</simplesect>
<simplesect kind="return"><para>false if not sourcing power </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="889" column="20" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="889" bodyend="899"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1gaccc728a1f27c59a163a5c0a221ab7c18" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_set_bist_test_mode</definition>
        <argsstring>(const struct device *dev, bool enable)</argsstring>
        <name>tcpc_set_bist_test_mode</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Controls the BIST Mode of the TCPC. It disables RX alerts while the mode is active. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>The TCPC enters BIST TEST Mode when true</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="912" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="912" bodyend="923"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga894d24140f8675b4f48d759c27f52076" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_get_chip_info</definition>
        <argsstring>(const struct device *dev, struct tcpc_chip_info *chip_info)</argsstring>
        <name>tcpc_get_chip_info</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>struct <ref refid="structtcpc__chip__info" kindref="compound">tcpc_chip_info</ref> *</type>
          <declname>chip_info</declname>
        </param>
        <briefdescription>
<para>Gets the TCPC firmware version. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chip_info</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to TCPC chip info where the version is stored</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="935" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="935" bodyend="946"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1ga961a4dc393d58dc44ea19a62c943ed48" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_set_low_power_mode</definition>
        <argsstring>(const struct device *dev, bool enable)</argsstring>
        <name>tcpc_set_low_power_mode</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Instructs the TCPC to enter or exit low power mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>The TCPC enters low power mode when true, else it exits it</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="958" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="958" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="group__usb__type__c__port__controller__api_1gab0f1f5d47c1e2b8ee9eb3d7875a0051e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int tcpc_sop_prime_enable</definition>
        <argsstring>(const struct device *dev, bool enable)</argsstring>
        <name>tcpc_sop_prime_enable</name>
        <param>
          <type>const struct <ref refid="structdevice" kindref="compound">device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enables the reception of SOP Prime messages. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Runtime device structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Can receive SOP Prime messages when true, else it can not</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success </para>
</simplesect>
<simplesect kind="return"><para>-EIO on failure </para>
</simplesect>
<simplesect kind="return"><para>-ENOSYS if not implemented </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/drivers/usbc/usbc_tcpc.h" line="981" column="19" bodyfile="include/drivers/usbc/usbc_tcpc.h" bodystart="981" bodyend="992"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>USBC Type-C Port Controller device APIs. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains the USB Type-C Port Controller device APIs. All Type-C Port Controller device drivers should implement the APIs described in this file. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2022<sp/>The<sp/>Chromium<sp/>OS<sp/>Authors</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_DRIVERS_USBC_USBC_TCPC_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_DRIVERS_USBC_USBC_TCPC_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;device.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="usbc__tc_8h" kindref="compound">usbc_tc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="usbc__pd_8h" kindref="compound">usbc_pd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="group__usb__type__c__port__controller__api_1ga4687047910cad0dd970bbd28adcf22ed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga4687047910cad0dd970bbd28adcf22ed" kindref="member">tcpc_alert</ref><sp/>{</highlight></codeline>
<codeline lineno="40" refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda30b8a2c88cc2309849efa9d478271a3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda30b8a2c88cc2309849efa9d478271a3f" kindref="member">TCPC_ALERT_CC_STATUS</ref>,</highlight></codeline>
<codeline lineno="42" refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edabbce6e484dc5373597097a664a6b5af4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edabbce6e484dc5373597097a664a6b5af4" kindref="member">TCPC_ALERT_POWER_STATUS</ref>,</highlight></codeline>
<codeline lineno="44" refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda57eedbbbb9b1d899e1607e25c2799eeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda57eedbbbb9b1d899e1607e25c2799eeb" kindref="member">TCPC_ALERT_MSG_STATUS</ref>,</highlight></codeline>
<codeline lineno="46" refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda61c51ceb776d0432c657f6c16d5595e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda61c51ceb776d0432c657f6c16d5595e0" kindref="member">TCPC_ALERT_HARD_RESET_RECEIVED</ref>,</highlight></codeline>
<codeline lineno="48" refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edadff8e9cab783e22eedad2971baae77ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edadff8e9cab783e22eedad2971baae77ec" kindref="member">TCPC_ALERT_TRANSMIT_MSG_FAILED</ref>,</highlight></codeline>
<codeline lineno="53" refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda302c30d41b09b4bf1949ce0c945c71fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda302c30d41b09b4bf1949ce0c945c71fe" kindref="member">TCPC_ALERT_TRANSMIT_MSG_DISCARDED</ref>,</highlight></codeline>
<codeline lineno="55" refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda642e2b837d88dc983177546a06d938b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda642e2b837d88dc983177546a06d938b2" kindref="member">TCPC_ALERT_TRANSMIT_MSG_SUCCESS</ref>,</highlight></codeline>
<codeline lineno="57" refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda64f5af2ef616a1adf90ff3549a114a66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda64f5af2ef616a1adf90ff3549a114a66" kindref="member">TCPC_ALERT_VBUS_ALARM_HI</ref>,</highlight></codeline>
<codeline lineno="59" refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edac44bb12fb7bd9de2f49af7d5f72744b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edac44bb12fb7bd9de2f49af7d5f72744b0" kindref="member">TCPC_ALERT_VBUS_ALARM_LO</ref>,</highlight></codeline>
<codeline lineno="61" refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edacd3a5188b6be126dfd00a4676e2a768e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edacd3a5188b6be126dfd00a4676e2a768e" kindref="member">TCPC_ALERT_FAULT_STATUS</ref>,</highlight></codeline>
<codeline lineno="63" refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edaefb353c046fa8346a4736d02a3003752" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edaefb353c046fa8346a4736d02a3003752" kindref="member">TCPC_ALERT_RX_BUFFER_OVERFLOW</ref>,</highlight></codeline>
<codeline lineno="65" refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda8aa0d4566f11e6079f59500ac03929cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda8aa0d4566f11e6079f59500ac03929cd" kindref="member">TCPC_ALERT_VBUS_SNK_DISCONNECT</ref>,</highlight></codeline>
<codeline lineno="67" refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda449d3f9271aa42feb43e54a1f36114eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda449d3f9271aa42feb43e54a1f36114eb" kindref="member">TCPC_ALERT_BEGINNING_MSG_STATUS</ref>,</highlight></codeline>
<codeline lineno="69" refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda284b478e32999fd923ba3064088274a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda284b478e32999fd923ba3064088274a9" kindref="member">TCPC_ALERT_EXTENDED_STATUS</ref>,</highlight></codeline>
<codeline lineno="74" refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda4356cb85ef371e72badad22110172e25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22eda4356cb85ef371e72badad22110172e25" kindref="member">TCPC_ALERT_EXTENDED</ref>,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edac5675390dfba5276227ff8d2be783992" kindref="member">TCPC_ALERT_VENDOR_DEFINED</ref></highlight></codeline>
<codeline lineno="77" refid="group__usb__type__c__port__controller__api_1gga4687047910cad0dd970bbd28adcf22edac5675390dfba5276227ff8d2be783992" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="group__usb__type__c__port__controller__api_1gafd8253dfa6abc80d0717b17271ed8916" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gafd8253dfa6abc80d0717b17271ed8916" kindref="member">tcpc_status_reg</ref><sp/>{</highlight></codeline>
<codeline lineno="84" refid="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916aaf41a51cc8e4c849780af463ea63a0c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916aaf41a51cc8e4c849780af463ea63a0c4" kindref="member">TCPC_CC_STATUS</ref>,</highlight></codeline>
<codeline lineno="86" refid="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916aa42f110436df796f5cfdadab921aac7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916aa42f110436df796f5cfdadab921aac7f" kindref="member">TCPC_POWER_STATUS</ref>,</highlight></codeline>
<codeline lineno="88" refid="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916a14723bbaaae32413e2399159a6def440" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916a14723bbaaae32413e2399159a6def440" kindref="member">TCPC_FAULT_STATUS</ref>,</highlight></codeline>
<codeline lineno="90" refid="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916afe72a3bc04d7f92bd74e754129e99c6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916afe72a3bc04d7f92bd74e754129e99c6d" kindref="member">TCPC_EXTENDED_STATUS</ref>,</highlight></codeline>
<codeline lineno="92" refid="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916a5e15cc2aae46edf6b7e0f5316b37a9db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916a5e15cc2aae46edf6b7e0f5316b37a9db" kindref="member">TCPC_EXTENDED_ALERT_STATUS</ref>,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916a45f424f2f0e126085d3e49e0cc4d7c61" kindref="member">TCPC_VENDOR_DEFINED_STATUS</ref></highlight></codeline>
<codeline lineno="95" refid="group__usb__type__c__port__controller__api_1ggafd8253dfa6abc80d0717b17271ed8916a45f424f2f0e126085d3e49e0cc4d7c61" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="structtcpc__chip__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__chip__info" kindref="compound">tcpc_chip_info</ref><sp/>{</highlight></codeline>
<codeline lineno="102" refid="structtcpc__chip__info_1ab48400ea4209d5443e5b7e0bfee6c4fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtcpc__chip__info_1ab48400ea4209d5443e5b7e0bfee6c4fc" kindref="member">vendor_id</ref>;</highlight></codeline>
<codeline lineno="104" refid="structtcpc__chip__info_1a14c11999ef548e41f4338f3e7208b7a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtcpc__chip__info_1a14c11999ef548e41f4338f3e7208b7a9" kindref="member">product_id</ref>;</highlight></codeline>
<codeline lineno="106" refid="structtcpc__chip__info_1a9e76ee3bcc395dbb77d7a065f6181cd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structtcpc__chip__info_1a9e76ee3bcc395dbb77d7a065f6181cd6" kindref="member">device_id</ref>;</highlight></codeline>
<codeline lineno="108" refid="structtcpc__chip__info_1a74b7660ed1c543f77b5d99f022bbb6a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="structtcpc__chip__info_1a74b7660ed1c543f77b5d99f022bbb6a8" kindref="member">fw_verion_number</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112" refid="structtcpc__chip__info_1a677a85ef27f0d5db969ce3232506d1bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structtcpc__chip__info_1a677a85ef27f0d5db969ce3232506d1bb" kindref="member">min_req_fw_version_string</ref>[8];</highlight></codeline>
<codeline lineno="114" refid="structtcpc__chip__info_1a8d66f33379493e1a0ed707b3715f863a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a2095b9bffea4b2656950c6c0419edbf1" kindref="member">uint64_t</ref><sp/><ref refid="structtcpc__chip__info_1a8d66f33379493e1a0ed707b3715f863a" kindref="member">min_req_fw_version_number</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="group__usb__type__c__port__controller__api_1gaf633b9bdc7bd342c461c996ff3a646f2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__usb__type__c__port__controller__api_1gaf633b9bdc7bd342c461c996ff3a646f2" kindref="member">tcpc_vbus_cb_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*vbus_meas);</highlight></codeline>
<codeline lineno="119" refid="group__usb__type__c__port__controller__api_1gaea89d79b0e15b647f4aa1f32f4f1ddd0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__usb__type__c__port__controller__api_1gaea89d79b0e15b647f4aa1f32f4f1ddd0" kindref="member">tcpc_discharge_vbus_cb_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="120" refid="group__usb__type__c__port__controller__api_1ga88ffc0a13061f46810dfdcaab7c7caf2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__usb__type__c__port__controller__api_1ga88ffc0a13061f46810dfdcaab7c7caf2" kindref="member">tcpc_vconn_control_cb_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="121" refid="group__usb__type__c__port__controller__api_1ga5f42fa12f90d34961eeeb67c0dc4f925" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group__usb__type__c__port__controller__api_1ga5f42fa12f90d34961eeeb67c0dc4f925" kindref="member">tcpc_alert_handler_cb_t</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga4687047910cad0dd970bbd28adcf22ed" kindref="member">tcpc_alert</ref><sp/>alert);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="structtcpc__driver__api" refkind="compound"><highlight class="normal">__subsystem<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>{</highlight></codeline>
<codeline lineno="125" refid="structtcpc__driver__api_1a00ee20f4d78ec1e337b614afdfa3a686" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1a00ee20f4d78ec1e337b614afdfa3a686" kindref="member">init</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="126" refid="structtcpc__driver__api_1ae4b2588a327da51b961d7a00159e5aab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1ae4b2588a327da51b961d7a00159e5aab" kindref="member">get_cc</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/>*cc1,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/>*cc2);</highlight></codeline>
<codeline lineno="128" refid="structtcpc__driver__api_1ab7b283d0d38b609e347a5bb0b1be8950" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structtcpc__driver__api_1ab7b283d0d38b609e347a5bb0b1be8950" kindref="member">set_vbus_measure_cb</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/><ref refid="group__usb__type__c__port__controller__api_1gaf633b9bdc7bd342c461c996ff3a646f2" kindref="member">tcpc_vbus_cb_t</ref><sp/>vbus_cb);</highlight></codeline>
<codeline lineno="129" refid="structtcpc__driver__api_1a764814405c9339edc5084c8892740267" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structtcpc__driver__api_1a764814405c9339edc5084c8892740267" kindref="member">set_discharge_vbus_cb</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gaea89d79b0e15b647f4aa1f32f4f1ddd0" kindref="member">tcpc_discharge_vbus_cb_t</ref><sp/>discharge_vbus_cb);</highlight></codeline>
<codeline lineno="131" refid="structtcpc__driver__api_1aed5778bd37c6b8bee2b531458bffca5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref><sp/>(*<ref refid="structtcpc__driver__api_1aed5778bd37c6b8bee2b531458bffca5c" kindref="member">check_vbus_level</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga015455a6c5620dfc96cfb713bbb72161" kindref="member">tc_vbus_level</ref><sp/>level);</highlight></codeline>
<codeline lineno="132" refid="structtcpc__driver__api_1adb6c5777a90065185e7c2a2d779a3296" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1adb6c5777a90065185e7c2a2d779a3296" kindref="member">get_vbus</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*vbus_meas);</highlight></codeline>
<codeline lineno="133" refid="structtcpc__driver__api_1a1eb311c296cfce9759d0f3137210fe6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1a1eb311c296cfce9759d0f3137210fe6f" kindref="member">select_rp_value</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga4e0eec97f7c5c97b87eff9561deea2d5" kindref="member">tc_rp_value</ref><sp/><ref refid="group__kernel__device__tests_1gabddc90d64cde2250894c1dc462b5fb4a" kindref="member">rp</ref>);</highlight></codeline>
<codeline lineno="134" refid="structtcpc__driver__api_1ad3fe740a7b85807242c03b6f32a7dea7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1ad3fe740a7b85807242c03b6f32a7dea7" kindref="member">get_rp_value</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga4e0eec97f7c5c97b87eff9561deea2d5" kindref="member">tc_rp_value</ref><sp/>*<ref refid="group__kernel__device__tests_1gabddc90d64cde2250894c1dc462b5fb4a" kindref="member">rp</ref>);</highlight></codeline>
<codeline lineno="135" refid="structtcpc__driver__api_1a4263d2b2b1e1e2002c09ef2ecb3c5a36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1a4263d2b2b1e1e2002c09ef2ecb3c5a36" kindref="member">set_cc</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga0200c820510eb786f3ca30a9b5f7aada" kindref="member">tc_cc_pull</ref><sp/>pull);</highlight></codeline>
<codeline lineno="136" refid="structtcpc__driver__api_1ad6b5fb88b0b39fd29584c2a2de685c20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structtcpc__driver__api_1ad6b5fb88b0b39fd29584c2a2de685c20" kindref="member">set_vconn_cb</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/><ref refid="group__usb__type__c__port__controller__api_1ga88ffc0a13061f46810dfdcaab7c7caf2" kindref="member">tcpc_vconn_control_cb_t</ref><sp/>vconn_cb);</highlight></codeline>
<codeline lineno="137" refid="structtcpc__driver__api_1a639486f042727c23781e90d725ac17fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1a639486f042727c23781e90d725ac17fc" kindref="member">set_vconn</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="138" refid="structtcpc__driver__api_1a43d110db7d4808939d24850f2c6a73be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1a43d110db7d4808939d24850f2c6a73be" kindref="member">set_roles</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1gaa6dda0612045b5f55b9d8ba63d2b9f9d" kindref="member">tc_power_role</ref><sp/>power_role,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga6b98bbe238e62cfd5531688494a63de2" kindref="member">tc_data_role</ref><sp/>data_role);</highlight></codeline>
<codeline lineno="140" refid="structtcpc__driver__api_1a5e912815555f4a8111045a57c4fa18b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1a5e912815555f4a8111045a57c4fa18b3" kindref="member">receive_data</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpd__msg" kindref="compound">pd_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>);</highlight></codeline>
<codeline lineno="141" refid="structtcpc__driver__api_1a555a68fc6892135e35a26627e5e730bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref><sp/>(*<ref refid="structtcpc__driver__api_1a555a68fc6892135e35a26627e5e730bf" kindref="member">is_rx_pending_msg</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__power__delivery_1gad2df13a24f0365198d37b10af608376b" kindref="member">pd_packet_type</ref><sp/>*type);</highlight></codeline>
<codeline lineno="142" refid="structtcpc__driver__api_1a3440cc5751b0820b7fd7f4c288089e23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1a3440cc5751b0820b7fd7f4c288089e23" kindref="member">set_rx_enable</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="143" refid="structtcpc__driver__api_1a7bbd6583cfc43ac235333aad93cc79e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1a7bbd6583cfc43ac235333aad93cc79e3" kindref="member">set_cc_polarity</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1gac5b4b58840c9b076a869a5816ba100db" kindref="member">tc_cc_polarity</ref><sp/>polarity);</highlight></codeline>
<codeline lineno="144" refid="structtcpc__driver__api_1abffc63aa90730025fae61891cb228cd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1abffc63aa90730025fae61891cb228cd4" kindref="member">transmit_data</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpd__msg" kindref="compound">pd_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>);</highlight></codeline>
<codeline lineno="145" refid="structtcpc__driver__api_1a11ecbb4c78aecb278e1a3568d032c05a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1a11ecbb4c78aecb278e1a3568d032c05a" kindref="member">dump_std_reg</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="146" refid="structtcpc__driver__api_1a271fc8d67338a4e7384d4f938026a5f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structtcpc__driver__api_1a271fc8d67338a4e7384d4f938026a5f3" kindref="member">alert_handler_cb</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga4687047910cad0dd970bbd28adcf22ed" kindref="member">tcpc_alert</ref><sp/>alert);</highlight></codeline>
<codeline lineno="147" refid="structtcpc__driver__api_1aa3d97fe5bc52b144a22551e38867fd2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1aa3d97fe5bc52b144a22551e38867fd2e" kindref="member">get_status_register</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gafd8253dfa6abc80d0717b17271ed8916" kindref="member">tcpc_status_reg</ref><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>*status);</highlight></codeline>
<codeline lineno="149" refid="structtcpc__driver__api_1a45a1d895153d5e7182313a15e6908df0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1a45a1d895153d5e7182313a15e6908df0" kindref="member">clear_status_register</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gafd8253dfa6abc80d0717b17271ed8916" kindref="member">tcpc_status_reg</ref><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>mask);</highlight></codeline>
<codeline lineno="151" refid="structtcpc__driver__api_1ac8750dd530c23a02e548b8b01c8abda3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1ac8750dd530c23a02e548b8b01c8abda3" kindref="member">mask_status_register</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gafd8253dfa6abc80d0717b17271ed8916" kindref="member">tcpc_status_reg</ref><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>mask);</highlight></codeline>
<codeline lineno="153" refid="structtcpc__driver__api_1a548ff24fef31a25f4fca5d6e00f50684" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1a548ff24fef31a25f4fca5d6e00f50684" kindref="member">set_discharge_vbus</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="154" refid="structtcpc__driver__api_1a4eeb509ed1a700dfe3bb930c3cc537af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1a4eeb509ed1a700dfe3bb930c3cc537af" kindref="member">enable_auto_discharge_disconnect</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="155" refid="structtcpc__driver__api_1a0bd24553cc59c3947f6ec634a2a611e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1a0bd24553cc59c3947f6ec634a2a611e0" kindref="member">set_debug_accessory</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="156" refid="structtcpc__driver__api_1ad3d06d75563e7a8f00a9a61fe279a6bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1ad3d06d75563e7a8f00a9a61fe279a6bc" kindref="member">set_debug_detach</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="157" refid="structtcpc__driver__api_1aed51c3046411854b7be470d761e77faa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1aed51c3046411854b7be470d761e77faa" kindref="member">set_drp_toggle</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="158" refid="structtcpc__driver__api_1a4e69b9bcd2c298361c21ed91de786cb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref><sp/>(*<ref refid="structtcpc__driver__api_1a4e69b9bcd2c298361c21ed91de786cb8" kindref="member">get_snk_ctrl</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="159" refid="structtcpc__driver__api_1a9e7667a2a133d3d45c645263c361016f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref><sp/>(*<ref refid="structtcpc__driver__api_1a9e7667a2a133d3d45c645263c361016f" kindref="member">get_src_ctrl</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="160" refid="structtcpc__driver__api_1a9ddaaae8e34bf36e868908d7555514dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1a9ddaaae8e34bf36e868908d7555514dd" kindref="member">get_chip_info</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__chip__info" kindref="compound">tcpc_chip_info</ref><sp/>*chip_info);</highlight></codeline>
<codeline lineno="161" refid="structtcpc__driver__api_1ac70604b14dd7fe966489c159e1b3433d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1ac70604b14dd7fe966489c159e1b3433d" kindref="member">set_low_power_mode</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="162" refid="structtcpc__driver__api_1a4402729135c40bbf30a18c148134b34c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1a4402729135c40bbf30a18c148134b34c" kindref="member">sop_prime_enable</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="163" refid="structtcpc__driver__api_1afba03924bd5b3f62733309b9a0084552" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1afba03924bd5b3f62733309b9a0084552" kindref="member">set_bist_test_mode</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="164" refid="structtcpc__driver__api_1adc0c8e5f174549fb7683028c58e890bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="structtcpc__driver__api_1adc0c8e5f174549fb7683028c58e890bd" kindref="member">set_alert_handler_cb</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/><ref refid="group__usb__type__c__port__controller__api_1ga5f42fa12f90d34961eeeb67c0dc4f925" kindref="member">tcpc_alert_handler_cb_t</ref><sp/><ref refid="timer_2starve_2src_2main_8c_1ab28ee8b6412d992f77f819e17b664869" kindref="member">handler</ref>,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="group__usb__type__c__port__controller__api_1ga6dfd68915ffe093058f6187b770a2436" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga6dfd68915ffe093058f6187b770a2436" kindref="member">tcpc_is_cc_rp</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/><ref refid="asm-macro-32-bit-gnu_8h_1a6bcd6506e83f22db3e77c1172a6d7ba6" kindref="member">cc</ref>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="asm-macro-32-bit-gnu_8h_1a6bcd6506e83f22db3e77c1172a6d7ba6" kindref="member">cc</ref><sp/>==<sp/><ref refid="group__usb__type__c_1gga64e32ec2da97f70fd5b96975317cb92ca06bd58eb73aa7f097046e7b88fde0293" kindref="member">TC_CC_VOLT_RP_DEF</ref>)<sp/>||<sp/>(<ref refid="asm-macro-32-bit-gnu_8h_1a6bcd6506e83f22db3e77c1172a6d7ba6" kindref="member">cc</ref><sp/>==<sp/><ref refid="group__usb__type__c_1gga64e32ec2da97f70fd5b96975317cb92ca3cc0d3c1ac9775b1b8ba77b87868bc72" kindref="member">TC_CC_VOLT_RP_1A5</ref>)<sp/>||</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="asm-macro-32-bit-gnu_8h_1a6bcd6506e83f22db3e77c1172a6d7ba6" kindref="member">cc</ref><sp/>==<sp/><ref refid="group__usb__type__c_1gga64e32ec2da97f70fd5b96975317cb92ca3965e449dbcc8ca6e87d72cd5a73f0ca" kindref="member">TC_CC_VOLT_RP_3A0</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="group__usb__type__c__port__controller__api_1ga0db896e395812603a03548b8faac6791" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga0db896e395812603a03548b8faac6791" kindref="member">tcpc_is_cc_open</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/>cc1,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/>cc2)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cc1<sp/>==<sp/><ref refid="group__usb__type__c_1gga64e32ec2da97f70fd5b96975317cb92ca1f4b82ea64d23167df5083fd7550cf05" kindref="member">TC_CC_VOLT_OPEN</ref><sp/>&amp;&amp;<sp/>cc2<sp/>==<sp/><ref refid="group__usb__type__c_1gga64e32ec2da97f70fd5b96975317cb92ca1f4b82ea64d23167df5083fd7550cf05" kindref="member">TC_CC_VOLT_OPEN</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="group__usb__type__c__port__controller__api_1gaa0d2059c3a53df986150141f73b9a98a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gaa0d2059c3a53df986150141f73b9a98a" kindref="member">tcpc_is_cc_snk_dbg_acc</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/>cc1,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/>cc2)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cc1<sp/>==<sp/><ref refid="group__usb__type__c_1gga64e32ec2da97f70fd5b96975317cb92ca2267bbcda871c265e77228a5fe6342a9" kindref="member">TC_CC_VOLT_RD</ref><sp/>&amp;&amp;<sp/>cc2<sp/>==<sp/><ref refid="group__usb__type__c_1gga64e32ec2da97f70fd5b96975317cb92ca2267bbcda871c265e77228a5fe6342a9" kindref="member">TC_CC_VOLT_RD</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="group__usb__type__c__port__controller__api_1ga03849a7a4fd7f468b18838c443d1ecd8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga03849a7a4fd7f468b18838c443d1ecd8" kindref="member">tcpc_is_cc_src_dbg_acc</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/>cc1,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/>cc2)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga6dfd68915ffe093058f6187b770a2436" kindref="member">tcpc_is_cc_rp</ref>(cc1)<sp/>&amp;&amp;<sp/><ref refid="group__usb__type__c__port__controller__api_1ga6dfd68915ffe093058f6187b770a2436" kindref="member">tcpc_is_cc_rp</ref>(cc2);</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="group__usb__type__c__port__controller__api_1ga153054be89d5f21148fe3ee750c718ee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga153054be89d5f21148fe3ee750c718ee" kindref="member">tcpc_is_cc_audio_acc</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/>cc1,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/>cc2)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cc1<sp/>==<sp/><ref refid="group__usb__type__c_1gga64e32ec2da97f70fd5b96975317cb92ca17a8d72f4dc6b29e1d4ad35a4f1531ea" kindref="member">TC_CC_VOLT_RA</ref><sp/>&amp;&amp;<sp/>cc2<sp/>==<sp/><ref refid="group__usb__type__c_1gga64e32ec2da97f70fd5b96975317cb92ca17a8d72f4dc6b29e1d4ad35a4f1531ea" kindref="member">TC_CC_VOLT_RA</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="group__usb__type__c__port__controller__api_1gab4e9cc812679cf8cb0189f73a28d7cd2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gab4e9cc812679cf8cb0189f73a28d7cd2" kindref="member">tcpc_is_cc_at_least_one_rd</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/>cc1,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/>cc2)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cc1<sp/>==<sp/><ref refid="group__usb__type__c_1gga64e32ec2da97f70fd5b96975317cb92ca2267bbcda871c265e77228a5fe6342a9" kindref="member">TC_CC_VOLT_RD</ref><sp/>||<sp/>cc2<sp/>==<sp/><ref refid="group__usb__type__c_1gga64e32ec2da97f70fd5b96975317cb92ca2267bbcda871c265e77228a5fe6342a9" kindref="member">TC_CC_VOLT_RD</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="group__usb__type__c__port__controller__api_1ga91c3c40ea82ce5a081918183d8b76c06" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga91c3c40ea82ce5a081918183d8b76c06" kindref="member">tcpc_is_cc_only_one_rd</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/>cc1,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/>cc2)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gab4e9cc812679cf8cb0189f73a28d7cd2" kindref="member">tcpc_is_cc_at_least_one_rd</ref>(cc1,<sp/>cc2)<sp/>&amp;&amp;<sp/>cc1<sp/>!=<sp/>cc2;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="group__usb__type__c__port__controller__api_1gabc50daa9cc713b1d0e340007e3850ca8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gabc50daa9cc713b1d0e340007e3850ca8" kindref="member">tcpc_init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT(api-&gt;<ref refid="structtcpc__driver__api_1a00ee20f4d78ec1e337b614afdfa3a686" kindref="member">init</ref><sp/>!=<sp/>NULL,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>pointer<sp/>should<sp/>not<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a00ee20f4d78ec1e337b614afdfa3a686" kindref="member">init</ref>(dev);</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="group__usb__type__c__port__controller__api_1ga66ab7a9f3cd1b80cd5bc8e99040c5627" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga66ab7a9f3cd1b80cd5bc8e99040c5627" kindref="member">tcpc_get_cc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/>*cc1,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga64e32ec2da97f70fd5b96975317cb92c" kindref="member">tc_cc_voltage_state</ref><sp/>*cc2)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1ae4b2588a327da51b961d7a00159e5aab" kindref="member">get_cc</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1ae4b2588a327da51b961d7a00159e5aab" kindref="member">get_cc</ref>(dev,<sp/>cc1,<sp/>cc2);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="group__usb__type__c__port__controller__api_1gad3d6c83080da4bfa481c97c24de9f139" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gad3d6c83080da4bfa481c97c24de9f139" kindref="member">tcpc_set_vbus_measure_cb</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gaf633b9bdc7bd342c461c996ff3a646f2" kindref="member">tcpc_vbus_cb_t</ref><sp/>vbus_cb)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT(api-&gt;<ref refid="structtcpc__driver__api_1ab7b283d0d38b609e347a5bb0b1be8950" kindref="member">set_vbus_measure_cb</ref><sp/>!=<sp/>NULL,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>pointer<sp/>should<sp/>not<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api-&gt;<ref refid="structtcpc__driver__api_1ab7b283d0d38b609e347a5bb0b1be8950" kindref="member">set_vbus_measure_cb</ref>(dev,<sp/>vbus_cb);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="group__usb__type__c__port__controller__api_1ga7df0b3745c525f1cc0bf0325d745965f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga7df0b3745c525f1cc0bf0325d745965f" kindref="member">tcpc_set_discharge_vbus_cb</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1gaea89d79b0e15b647f4aa1f32f4f1ddd0" kindref="member">tcpc_discharge_vbus_cb_t</ref><sp/>discharge_vbus_cb)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT(api-&gt;<ref refid="structtcpc__driver__api_1a764814405c9339edc5084c8892740267" kindref="member">set_discharge_vbus_cb</ref><sp/>!=<sp/>NULL,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>pointer<sp/>should<sp/>not<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a764814405c9339edc5084c8892740267" kindref="member">set_discharge_vbus_cb</ref>(dev,<sp/>discharge_vbus_cb);</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="group__usb__type__c__port__controller__api_1ga082b09cd530983b1969e922ea1dedbe6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga082b09cd530983b1969e922ea1dedbe6" kindref="member">tcpc_check_vbus_level</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga015455a6c5620dfc96cfb713bbb72161" kindref="member">tc_vbus_level</ref><sp/>level)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT(api-&gt;<ref refid="structtcpc__driver__api_1aed5778bd37c6b8bee2b531458bffca5c" kindref="member">check_vbus_level</ref><sp/>!=<sp/>NULL,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>pointer<sp/>should<sp/>not<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1aed5778bd37c6b8bee2b531458bffca5c" kindref="member">check_vbus_level</ref>(dev,<sp/>level);</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="group__usb__type__c__port__controller__api_1ga730866ea93305ae736adcc77d0ec3490" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga730866ea93305ae736adcc77d0ec3490" kindref="member">tcpc_get_vbus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*vbus_meas)</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT(api-&gt;<ref refid="structtcpc__driver__api_1adb6c5777a90065185e7c2a2d779a3296" kindref="member">get_vbus</ref><sp/>!=<sp/>NULL,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>pointer<sp/>should<sp/>not<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1adb6c5777a90065185e7c2a2d779a3296" kindref="member">get_vbus</ref>(dev,<sp/>vbus_meas);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="group__usb__type__c__port__controller__api_1ga3958eac0cc0b9b2ac782e0cdb235036c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga3958eac0cc0b9b2ac782e0cdb235036c" kindref="member">tcpc_select_rp_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga4e0eec97f7c5c97b87eff9561deea2d5" kindref="member">tc_rp_value</ref><sp/><ref refid="group__kernel__device__tests_1gabddc90d64cde2250894c1dc462b5fb4a" kindref="member">rp</ref>)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1a1eb311c296cfce9759d0f3137210fe6f" kindref="member">select_rp_value</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a1eb311c296cfce9759d0f3137210fe6f" kindref="member">select_rp_value</ref>(dev,<sp/><ref refid="group__kernel__device__tests_1gabddc90d64cde2250894c1dc462b5fb4a" kindref="member">rp</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="group__usb__type__c__port__controller__api_1ga25a110be90977e768623f3a0c9a222d5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga25a110be90977e768623f3a0c9a222d5" kindref="member">tcpc_get_rp_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga4e0eec97f7c5c97b87eff9561deea2d5" kindref="member">tc_rp_value</ref><sp/>*<ref refid="group__kernel__device__tests_1gabddc90d64cde2250894c1dc462b5fb4a" kindref="member">rp</ref>)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1ad3fe740a7b85807242c03b6f32a7dea7" kindref="member">get_rp_value</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1ad3fe740a7b85807242c03b6f32a7dea7" kindref="member">get_rp_value</ref>(dev,<sp/><ref refid="group__kernel__device__tests_1gabddc90d64cde2250894c1dc462b5fb4a" kindref="member">rp</ref>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="group__usb__type__c__port__controller__api_1gac5737d02caa2b9e649b469bcd648440f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gac5737d02caa2b9e649b469bcd648440f" kindref="member">tcpc_set_cc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga0200c820510eb786f3ca30a9b5f7aada" kindref="member">tc_cc_pull</ref><sp/>pull)</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT(api-&gt;<ref refid="structtcpc__driver__api_1a4263d2b2b1e1e2002c09ef2ecb3c5a36" kindref="member">set_cc</ref><sp/>!=<sp/>NULL,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>pointer<sp/>should<sp/>not<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a4263d2b2b1e1e2002c09ef2ecb3c5a36" kindref="member">set_cc</ref>(dev,<sp/>pull);</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="group__usb__type__c__port__controller__api_1gaa608f2c6627c4a9c3039f0ec1b238bbc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gaa608f2c6627c4a9c3039f0ec1b238bbc" kindref="member">tcpc_set_vconn_cb</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1ga88ffc0a13061f46810dfdcaab7c7caf2" kindref="member">tcpc_vconn_control_cb_t</ref><sp/>vconn_cb)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT(api-&gt;<ref refid="structtcpc__driver__api_1ad6b5fb88b0b39fd29584c2a2de685c20" kindref="member">set_vconn_cb</ref><sp/>!=<sp/>NULL,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>pointer<sp/>should<sp/>not<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1ad6b5fb88b0b39fd29584c2a2de685c20" kindref="member">set_vconn_cb</ref>(dev,<sp/>vconn_cb);</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="group__usb__type__c__port__controller__api_1ga247f0ea91249753d6f5eefe006617e41" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga247f0ea91249753d6f5eefe006617e41" kindref="member">tcpc_set_vconn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1a639486f042727c23781e90d725ac17fc" kindref="member">set_vconn</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a639486f042727c23781e90d725ac17fc" kindref="member">set_vconn</ref>(dev,<sp/>enable);</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="group__usb__type__c__port__controller__api_1ga8d30c961335f62faa33aa7d842422da0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga8d30c961335f62faa33aa7d842422da0" kindref="member">tcpc_set_roles</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1gaa6dda0612045b5f55b9d8ba63d2b9f9d" kindref="member">tc_power_role</ref><sp/>power_role,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1ga6b98bbe238e62cfd5531688494a63de2" kindref="member">tc_data_role</ref><sp/>data_role)</highlight></codeline>
<codeline lineno="495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1a43d110db7d4808939d24850f2c6a73be" kindref="member">set_roles</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a43d110db7d4808939d24850f2c6a73be" kindref="member">set_roles</ref>(dev,<sp/>power_role,<sp/>data_role);</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="group__usb__type__c__port__controller__api_1ga1ab0e57f1b3954d474e4dae307aa11b5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga1ab0e57f1b3954d474e4dae307aa11b5" kindref="member">tcpc_is_rx_pending_msg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__power__delivery_1gad2df13a24f0365198d37b10af608376b" kindref="member">pd_packet_type</ref><sp/>*type)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1a555a68fc6892135e35a26627e5e730bf" kindref="member">is_rx_pending_msg</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a555a68fc6892135e35a26627e5e730bf" kindref="member">is_rx_pending_msg</ref>(dev,<sp/>type);</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="group__usb__type__c__port__controller__api_1ga875559886f0793117c5f7eccea3979b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga875559886f0793117c5f7eccea3979b0" kindref="member">tcpc_receive_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpd__msg" kindref="compound">pd_msg</ref><sp/>*buf)</highlight></codeline>
<codeline lineno="542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1a5e912815555f4a8111045a57c4fa18b3" kindref="member">receive_data</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a5e912815555f4a8111045a57c4fa18b3" kindref="member">receive_data</ref>(dev,<sp/>buf);</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="group__usb__type__c__port__controller__api_1ga905176a77ff127f4df8f6a4f2c61a1b7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga905176a77ff127f4df8f6a4f2c61a1b7" kindref="member">tcpc_set_rx_enable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1a3440cc5751b0820b7fd7f4c288089e23" kindref="member">set_rx_enable</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a3440cc5751b0820b7fd7f4c288089e23" kindref="member">set_rx_enable</ref>(dev,<sp/>enable);</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="585" refid="group__usb__type__c__port__controller__api_1ga53f0207ecb63011c6dfc3c298a841ed4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga53f0207ecb63011c6dfc3c298a841ed4" kindref="member">tcpc_set_cc_polarity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c_1gac5b4b58840c9b076a869a5816ba100db" kindref="member">tc_cc_polarity</ref><sp/>polarity)</highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT(api-&gt;<ref refid="structtcpc__driver__api_1a7bbd6583cfc43ac235333aad93cc79e3" kindref="member">set_cc_polarity</ref><sp/>!=<sp/>NULL,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>pointer<sp/>should<sp/>not<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a7bbd6583cfc43ac235333aad93cc79e3" kindref="member">set_cc_polarity</ref>(dev,<sp/>polarity);</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="607" refid="group__usb__type__c__port__controller__api_1ga8bf8fd202d582a4cc179a0fc4aff35e1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga8bf8fd202d582a4cc179a0fc4aff35e1" kindref="member">tcpc_transmit_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpd__msg" kindref="compound">pd_msg</ref><sp/>*<ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>)</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1abffc63aa90730025fae61891cb228cd4" kindref="member">transmit_data</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1abffc63aa90730025fae61891cb228cd4" kindref="member">transmit_data</ref>(dev,<sp/><ref refid="timer_2cycle64_2src_2main_8c_1aa39a15fe6277f55e2fda62d3a6bf49da" kindref="member">msg</ref>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="629" refid="group__usb__type__c__port__controller__api_1ga91eef7084b523f1991e000f0592b8cbd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga91eef7084b523f1991e000f0592b8cbd" kindref="member">tcpc_dump_std_reg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1a11ecbb4c78aecb278e1a3568d032c05a" kindref="member">dump_std_reg</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a11ecbb4c78aecb278e1a3568d032c05a" kindref="member">dump_std_reg</ref>(dev);</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="654" refid="group__usb__type__c__port__controller__api_1ga75f0dc246dac576f14c5ac51b45fd489" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga75f0dc246dac576f14c5ac51b45fd489" kindref="member">tcpc_set_alert_handler_cb</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__usb__type__c__port__controller__api_1ga5f42fa12f90d34961eeeb67c0dc4f925" kindref="member">tcpc_alert_handler_cb_t</ref><sp/><ref refid="timer_2starve_2src_2main_8c_1ab28ee8b6412d992f77f819e17b664869" kindref="member">handler</ref>,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ASSERT(api-&gt;<ref refid="structtcpc__driver__api_1adc0c8e5f174549fb7683028c58e890bd" kindref="member">set_alert_handler_cb</ref><sp/>!=<sp/>NULL,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>pointer<sp/>should<sp/>not<sp/>be<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1adc0c8e5f174549fb7683028c58e890bd" kindref="member">set_alert_handler_cb</ref>(dev,<sp/><ref refid="timer_2starve_2src_2main_8c_1ab28ee8b6412d992f77f819e17b664869" kindref="member">handler</ref>,<sp/><ref refid="test__fifo__contexts_8c_1a8b1feab52ee372b1ee1297129329eaad" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="678" refid="group__usb__type__c__port__controller__api_1ga41e81b8f83e06934a5eb984ae6f980ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga41e81b8f83e06934a5eb984ae6f980ec" kindref="member">tcpc_get_status_register</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gafd8253dfa6abc80d0717b17271ed8916" kindref="member">tcpc_status_reg</ref><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0c18914b3041c2f583aba76f418399c2" kindref="member">int32_t</ref><sp/>*status)</highlight></codeline>
<codeline lineno="681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1aa3d97fe5bc52b144a22551e38867fd2e" kindref="member">get_status_register</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1aa3d97fe5bc52b144a22551e38867fd2e" kindref="member">get_status_register</ref>(dev,<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>,<sp/>status);</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="704" refid="group__usb__type__c__port__controller__api_1ga00170b754d78d8eb7da24abd7d533e42" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga00170b754d78d8eb7da24abd7d533e42" kindref="member">tcpc_clear_status_register</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gafd8253dfa6abc80d0717b17271ed8916" kindref="member">tcpc_status_reg</ref><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>,</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>mask)</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1a45a1d895153d5e7182313a15e6908df0" kindref="member">clear_status_register</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a45a1d895153d5e7182313a15e6908df0" kindref="member">clear_status_register</ref>(dev,<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>,<sp/>mask);</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="730" refid="group__usb__type__c__port__controller__api_1ga0d1868d555e99877e062fb7135d9db8f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga0d1868d555e99877e062fb7135d9db8f" kindref="member">tcpc_mask_status_register</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gafd8253dfa6abc80d0717b17271ed8916" kindref="member">tcpc_status_reg</ref><sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>mask)</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1ac8750dd530c23a02e548b8b01c8abda3" kindref="member">mask_status_register</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1ac8750dd530c23a02e548b8b01c8abda3" kindref="member">mask_status_register</ref>(dev,<sp/><ref refid="mem__heap_2shared__multi__heap_2src_2main_8c_1a698b4ae5d990c4030b61afb7e057cb03" kindref="member">reg</ref>,<sp/>mask);</highlight></codeline>
<codeline lineno="742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="756" refid="group__usb__type__c__port__controller__api_1ga0a04473fe22efe368b6b93f4a481d490" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga0a04473fe22efe368b6b93f4a481d490" kindref="member">tcpc_set_discharge_vbus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="757"><highlight class="normal">{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1a548ff24fef31a25f4fca5d6e00f50684" kindref="member">set_discharge_vbus</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a548ff24fef31a25f4fca5d6e00f50684" kindref="member">set_discharge_vbus</ref>(dev,<sp/>enable);</highlight></codeline>
<codeline lineno="766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="780" refid="group__usb__type__c__port__controller__api_1ga9dbf0d49edd810f75775272e84e42b0a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga9dbf0d49edd810f75775272e84e42b0a" kindref="member">tcpc_enable_auto_discharge_disconnect</ref>(</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1a4eeb509ed1a700dfe3bb930c3cc537af" kindref="member">enable_auto_discharge_disconnect</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a4eeb509ed1a700dfe3bb930c3cc537af" kindref="member">enable_auto_discharge_disconnect</ref>(dev,<sp/>enable);</highlight></codeline>
<codeline lineno="791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="803" refid="group__usb__type__c__port__controller__api_1ga01687aa218b25ba137e994a2a55bce23" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga01687aa218b25ba137e994a2a55bce23" kindref="member">tcpc_set_debug_accessory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="805"><highlight class="normal">{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1a0bd24553cc59c3947f6ec634a2a611e0" kindref="member">set_debug_accessory</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a0bd24553cc59c3947f6ec634a2a611e0" kindref="member">set_debug_accessory</ref>(dev,<sp/>enable);</highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="825" refid="group__usb__type__c__port__controller__api_1gaaa38e56e6bc8c41e936d8ed70aaa8a23" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gaaa38e56e6bc8c41e936d8ed70aaa8a23" kindref="member">tcpc_set_debug_detach</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1ad3d06d75563e7a8f00a9a61fe279a6bc" kindref="member">set_debug_detach</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1ad3d06d75563e7a8f00a9a61fe279a6bc" kindref="member">set_debug_detach</ref>(dev);</highlight></codeline>
<codeline lineno="835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="847" refid="group__usb__type__c__port__controller__api_1gaa06e156bef46ff3f70cc8c302ddf0a4d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gaa06e156bef46ff3f70cc8c302ddf0a4d" kindref="member">tcpc_set_drp_toggle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="848"><highlight class="normal">{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1aed51c3046411854b7be470d761e77faa" kindref="member">set_drp_toggle</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1aed51c3046411854b7be470d761e77faa" kindref="member">set_drp_toggle</ref>(dev,<sp/>enable);</highlight></codeline>
<codeline lineno="857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="868" refid="group__usb__type__c__port__controller__api_1gaa5e5faf410d7189d861bf0ae888bdf06" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gaa5e5faf410d7189d861bf0ae888bdf06" kindref="member">tcpc_get_snk_ctrl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1a4e69b9bcd2c298361c21ed91de786cb8" kindref="member">get_snk_ctrl</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a4e69b9bcd2c298361c21ed91de786cb8" kindref="member">get_snk_ctrl</ref>(dev);</highlight></codeline>
<codeline lineno="878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="889" refid="group__usb__type__c__port__controller__api_1ga12142e950ad17b868b0f933eea0c266e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga12142e950ad17b868b0f933eea0c266e" kindref="member">tcpc_get_src_ctrl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="890"><highlight class="normal">{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1a9e7667a2a133d3d45c645263c361016f" kindref="member">get_src_ctrl</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a9e7667a2a133d3d45c645263c361016f" kindref="member">get_src_ctrl</ref>(dev);</highlight></codeline>
<codeline lineno="899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="912" refid="group__usb__type__c__port__controller__api_1gaccc728a1f27c59a163a5c0a221ab7c18" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gaccc728a1f27c59a163a5c0a221ab7c18" kindref="member">tcpc_set_bist_test_mode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="914"><highlight class="normal">{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1afba03924bd5b3f62733309b9a0084552" kindref="member">set_bist_test_mode</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1afba03924bd5b3f62733309b9a0084552" kindref="member">set_bist_test_mode</ref>(dev,<sp/>enable);</highlight></codeline>
<codeline lineno="923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="935" refid="group__usb__type__c__port__controller__api_1ga894d24140f8675b4f48d759c27f52076" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga894d24140f8675b4f48d759c27f52076" kindref="member">tcpc_get_chip_info</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structtcpc__chip__info" kindref="compound">tcpc_chip_info</ref><sp/>*chip_info)</highlight></codeline>
<codeline lineno="937"><highlight class="normal">{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1a9ddaaae8e34bf36e868908d7555514dd" kindref="member">get_chip_info</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a9ddaaae8e34bf36e868908d7555514dd" kindref="member">get_chip_info</ref>(dev,<sp/>chip_info);</highlight></codeline>
<codeline lineno="946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="958" refid="group__usb__type__c__port__controller__api_1ga961a4dc393d58dc44ea19a62c943ed48" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1ga961a4dc393d58dc44ea19a62c943ed48" kindref="member">tcpc_set_low_power_mode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="960"><highlight class="normal">{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1ac70604b14dd7fe966489c159e1b3433d" kindref="member">set_low_power_mode</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1ac70604b14dd7fe966489c159e1b3433d" kindref="member">set_low_power_mode</ref>(dev,<sp/>enable);</highlight></codeline>
<codeline lineno="969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="981" refid="group__usb__type__c__port__controller__api_1gab0f1f5d47c1e2b8ee9eb3d7875a0051e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__usb__type__c__port__controller__api_1gab0f1f5d47c1e2b8ee9eb3d7875a0051e" kindref="member">tcpc_sop_prime_enable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structdevice" kindref="compound">device</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="983"><highlight class="normal">{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*api<sp/>=</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtcpc__driver__api" kindref="compound">tcpc_driver_api</ref><sp/>*)dev-&gt;<ref refid="structdevice_1a4a2e6a2cfeb6efed7d5383c33458f46d" kindref="member">api</ref>;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(api-&gt;<ref refid="structtcpc__driver__api_1a4402729135c40bbf30a18c148134b34c" kindref="member">sop_prime_enable</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="group__system__errno_1ga43785b9969e0bd1af532dbde06c5540b" kindref="member">ENOSYS</ref>;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>api-&gt;<ref refid="structtcpc__driver__api_1a4402729135c40bbf30a18c148134b34c" kindref="member">sop_prime_enable</ref>(dev,<sp/>enable);</highlight></codeline>
<codeline lineno="992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_DRIVERS_USBC_USBC_TCPC_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/drivers/usbc/usbc_tcpc.h"/>
  </compounddef>
</doxygen>

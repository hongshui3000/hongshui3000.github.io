<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="bass_8h" kind="file" language="C++">
    <compoundname>bass.h</compoundname>
    <includes refid="include_2zephyr_2types_8h" local="no">zephyr/types.h</includes>
    <includes refid="conn_8h" local="no">bluetooth/conn.h</includes>
    <incdepgraph>
      <node id="19">
        <label>stdarg.h</label>
      </node>
      <node id="21">
        <label>bluetooth/crypto.h</label>
        <link refid="bluetooth_2crypto_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>zephyr/types.h</label>
        <link refid="include_2zephyr_2types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>net/buf.h</label>
        <link refid="net_2buf_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>bluetooth/conn.h</label>
        <link refid="conn_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>sys/printk.h</label>
        <link refid="printk_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>bluetooth/gap.h</label>
        <link refid="gap_8h"/>
      </node>
      <node id="1">
        <label>include/bluetooth/audio/bass.h</label>
        <link refid="bass_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdbool.h</label>
        <link refid="stdbool_8h"/>
      </node>
      <node id="12">
        <label>sys/util_internal.h</label>
        <link refid="util__internal_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="10">
        <label>sys/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdint.h</label>
        <link refid="stdint_8h"/>
      </node>
      <node id="17">
        <label>bluetooth/addr.h</label>
        <link refid="addr_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>toolchain.h</label>
        <link refid="toolchain_8h"/>
      </node>
      <node id="13">
        <label>util_loops.h</label>
        <link refid="util__loops_8h"/>
      </node>
      <node id="22">
        <label>bluetooth/hci_err.h</label>
        <link refid="hci__err_8h"/>
      </node>
      <node id="15">
        <label>zephyr.h</label>
      </node>
      <node id="11">
        <label>sys/util_macro.h</label>
        <link refid="util__macro_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>bluetooth/direction.h</label>
        <link refid="direction_8h"/>
      </node>
      <node id="20">
        <label>inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>bluetooth/bluetooth.h</label>
        <link refid="bluetooth_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structbt__bass__subgroup" prot="public">bt_bass_subgroup</innerclass>
    <innerclass refid="structbt__bass__recv__state" prot="public">bt_bass_recv_state</innerclass>
    <innerclass refid="structbt__bass__cb" prot="public">bt_bass_cb</innerclass>
    <innerclass refid="structbt__bass__client__cb" prot="public">bt_bass_client_cb</innerclass>
    <innerclass refid="structbt__bass__add__src__param" prot="public">bt_bass_add_src_param</innerclass>
    <innerclass refid="structbt__bass__mod__src__param" prot="public">bt_bass_mod_src_param</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="bass_8h_1af7ea62a2a1430991edb2f342b9e7667b" prot="public" static="no">
        <name>BT_BASS_MAX_METADATA_LEN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="19" column="10" bodyfile="include/bluetooth/audio/bass.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bass_8h_1aa89866bb234a0cb96c0013b784154160" prot="public" static="no">
        <name>BT_BASS_MAX_SUBGROUPS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="20" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bass_8h_1a43ef70deb1c85eb1016bef92b19b2422" prot="public" static="no">
        <name>BT_BASS_BROADCAST_CODE_SIZE</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="23" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bass_8h_1a2ba2fa0941c571835cb482e35e9a8922" prot="public" static="no">
        <name>BT_BASS_PA_STATE_NOT_SYNCED</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="25" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bass_8h_1a6c50e707481330d3aac1e6dae3ae4430" prot="public" static="no">
        <name>BT_BASS_PA_STATE_INFO_REQ</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="26" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bass_8h_1a721552b28038cb3d7961c6aa388f849d" prot="public" static="no">
        <name>BT_BASS_PA_STATE_SYNCED</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="27" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bass_8h_1af6c64713f1e506ea87882a496f01a6ff" prot="public" static="no">
        <name>BT_BASS_PA_STATE_FAILED</name>
        <initializer>0x03</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="28" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bass_8h_1ad6e4e0f172572c5bc0b2417ac65869ba" prot="public" static="no">
        <name>BT_BASS_PA_STATE_NO_PAST</name>
        <initializer>0x04</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="29" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bass_8h_1afb176f5a1a78a8b42080463d56d436e1" prot="public" static="no">
        <name>BT_BASS_BIG_ENC_STATE_NO_ENC</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="31" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bass_8h_1aadd7f475f9959cee0c138a1420d96cc0" prot="public" static="no">
        <name>BT_BASS_BIG_ENC_STATE_BCODE_REQ</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="32" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bass_8h_1aaa0542ec0653ea7481c9904f879aea97" prot="public" static="no">
        <name>BT_BASS_BIG_ENC_STATE_DEC</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="33" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bass_8h_1a237491c6356be7e27e72fba7326d430f" prot="public" static="no">
        <name>BT_BASS_BIG_ENC_STATE_BAD_CODE</name>
        <initializer>0x03</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="34" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bass_8h_1ae14a0fd4732bf38e3f39ce0e665cd544" prot="public" static="no">
        <name>BT_BASS_ERR_OPCODE_NOT_SUPPORTED</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="36" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bass_8h_1a5018fe72d5d4e6851ebb6f62256c6506" prot="public" static="no">
        <name>BT_BASS_ERR_INVALID_SRC_ID</name>
        <initializer>0x81</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="37" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bass_8h_1ab7e16e0879694a33dc35414178ae9c05" prot="public" static="no">
        <name>BT_BASS_PA_INTERVAL_UNKNOWN</name>
        <initializer>0xFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="39" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bass_8h_1aec8e435532e8120c1312cf888cacd4aa" prot="public" static="no">
        <name>BT_BASS_BROADCAST_MAX_ID</name>
        <initializer>0xFFFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="41" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="bass_8h_1abc019a5313db91a36f13f4f2b09a8cb2" prot="public" static="no">
        <name>BT_BASS_BIS_SYNC_NO_PREF</name>
        <initializer>0xFFFFFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="43" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="bass_8h_1adf418ef28cdb2c38fddab9293041c04c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_bass_client_discover_cb) (struct bt_conn *conn, int err, uint8_t recv_state_count)</definition>
        <argsstring>)(struct bt_conn *conn, int err, uint8_t recv_state_count)</argsstring>
        <name>bt_bass_client_discover_cb</name>
        <briefdescription>
<para>Callback function for bt_bass_client_discover. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection that was used to discover Broadcast Audio Scan Service. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error or ERRNO on fail. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recv_state_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of receive states on the server. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="108" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="bass_8h_1a96d7b8cf0bee48409d575fa130faf488" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_bass_client_scan_cb) (const struct bt_le_scan_recv_info *info, uint32_t broadcast_id)</definition>
        <argsstring>)(const struct bt_le_scan_recv_info *info, uint32_t broadcast_id)</argsstring>
        <name>bt_bass_client_scan_cb</name>
        <briefdescription>
<para>Callback function for Broadcast Audio Scan Service client scan results. </para>
        </briefdescription>
        <detaileddescription>
<para>Called when the scanner finds an advertiser that advertises the BT_UUID_BROADCAST_AUDIO UUID.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>Advertiser information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>broadcast_id</parametername>
</parameternamelist>
<parameterdescription>
<para>24-bit broadcast ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="120" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="bass_8h_1a0bb7f977293267ce963c652ae3ed7bbb" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_bass_client_recv_state_cb) (struct bt_conn *conn, int err, const struct bt_bass_recv_state *state)</definition>
        <argsstring>)(struct bt_conn *conn, int err, const struct bt_bass_recv_state *state)</argsstring>
        <name>bt_bass_client_recv_state_cb</name>
        <briefdescription>
<para>Callback function for when a receive state is read or updated. </para>
        </briefdescription>
        <detaileddescription>
<para>Called whenever a receive state is read or updated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection to the Broadcast Audio Scan Service server. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on fail. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The receive state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="132" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="bass_8h_1a751b83ba30e21a776cd2214ca63a06f6" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_bass_client_recv_state_rem_cb) (struct bt_conn *conn, int err, uint8_t src_id)</definition>
        <argsstring>)(struct bt_conn *conn, int err, uint8_t src_id)</argsstring>
        <name>bt_bass_client_recv_state_rem_cb</name>
        <briefdescription>
<para>Callback function for when a receive state is removed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection to the Broadcast Audio Scan Service server. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on fail. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The receive state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="142" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="bass_8h_1a626b8e30a3bb1b06db8e112aeb20dde5" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bt_bass_client_write_cb) (struct bt_conn *conn, int err)</definition>
        <argsstring>)(struct bt_conn *conn, int err)</argsstring>
        <name>bt_bass_client_write_cb</name>
        <briefdescription>
<para>Callback function for writes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection to the peer device. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Error value. 0 on success, GATT error on fail. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="151" column="9" bodyfile="include/bluetooth/audio/bass.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bass_8h_1a9490a6432700e5bf5d6b367b973c89ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bt_bass_register_cb</definition>
        <argsstring>(struct bt_bass_cb *cb)</argsstring>
        <name>bt_bass_register_cb</name>
        <param>
          <type>struct <ref refid="structbt__bass__cb" kindref="compound">bt_bass_cb</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Registers the callbacks used by BASS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="81" column="6" declfile="include/bluetooth/audio/bass.h" declline="81" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bass_8h_1acd57af5ac7e087d3ab1a0bd49cc54918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_bass_set_sync_state</definition>
        <argsstring>(uint8_t src_id, uint8_t pa_sync_state, uint32_t bis_synced[0], uint8_t encrypted)</argsstring>
        <name>bt_bass_set_sync_state</name>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>src_id</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>pa_sync_state</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref></type>
          <declname>bis_synced</declname>
          <array>[0]</array>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>encrypted</declname>
        </param>
        <briefdescription>
<para>Set the sync state of a receive state in the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The source id used to identify the receive state. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pa_sync_state</parametername>
</parameternamelist>
<parameterdescription>
<para>The sync state of the PA. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bis_synced</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of bitfields to set the BIS sync state for each subgroup. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encrypted</parametername>
</parameternamelist>
<parameterdescription>
<para>The BIG encryption state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int Error value. 0 on success, ERRNO on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="93" column="5" declfile="include/bluetooth/audio/bass.h" declline="93" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bass_8h_1a16cd52b6dfc7609551e08f2690cf9fbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_bass_client_discover</definition>
        <argsstring>(struct bt_conn *conn)</argsstring>
        <name>bt_bass_client_discover</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Discover Broadcast Audio Scan Service on the server. </para>
        </briefdescription>
        <detaileddescription>
<para>Warning: Only one connection can be active at any time; discovering for a new connection, will delete all previous data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>The connection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int Error value. 0 on success, GATT error or ERRNO on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="176" column="5" declfile="include/bluetooth/audio/bass.h" declline="176" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bass_8h_1a65cb05af05dfc59a54c778298f2b72b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_bass_client_scan_start</definition>
        <argsstring>(struct bt_conn *conn, bool start_scan)</argsstring>
        <name>bt_bass_client_scan_start</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type><ref refid="stdbool_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>start_scan</declname>
        </param>
        <briefdescription>
<para>Scan start for BISes for a remote server. </para>
        </briefdescription>
        <detaileddescription>
<para>This will let the Broadcast Audio Scan Service server know that this device is actively scanning for broadcast sources. The function can optionally also start scanning, if the caller does not want to start scanning itself.</para>
<para>Scan results, if <computeroutput>start_scan</computeroutput> is true, is sent to the bt_bass_client_scan_cb callback.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the Broadcast Audio Scan Service server. Used to let the server know that we are scanning. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_scan</parametername>
</parameternamelist>
<parameterdescription>
<para>Start scanning if true. If false, the application should enable scan itself. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int Error value. 0 on success, GATT error or ERRNO on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="195" column="5" declfile="include/bluetooth/audio/bass.h" declline="195" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bass_8h_1adbd7ef34ce4f6969d850bd26ff882b57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_bass_client_scan_stop</definition>
        <argsstring>(struct bt_conn *conn)</argsstring>
        <name>bt_bass_client_scan_stop</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
<para>Stop remote scanning for BISes for a server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the server. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int Error value. 0 on success, GATT error or ERRNO on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="203" column="5" declfile="include/bluetooth/audio/bass.h" declline="203" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bass_8h_1aa2e5761a2dec7c225139e18d68dffbb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bt_bass_client_register_cb</definition>
        <argsstring>(struct bt_bass_client_cb *cb)</argsstring>
        <name>bt_bass_client_register_cb</name>
        <param>
          <type>struct <ref refid="structbt__bass__client__cb" kindref="compound">bt_bass_client_cb</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Registers the callbacks used by Broadcast Audio Scan Service client. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="208" column="6" declfile="include/bluetooth/audio/bass.h" declline="208" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="bass_8h_1a1111080d89c4154dcf7cc28862aa0128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_bass_client_add_src</definition>
        <argsstring>(struct bt_conn *conn, struct bt_bass_add_src_param *param)</argsstring>
        <name>bt_bass_client_add_src</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__bass__add__src__param" kindref="compound">bt_bass_add_src_param</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Add a source on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the server. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter struct.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Error value. 0 on success, GATT error or ERRNO on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="240" column="5" declfile="include/bluetooth/audio/bass.h" declline="240" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bass_8h_1addb14a6399e40d30409e6169d627125f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_bass_client_mod_src</definition>
        <argsstring>(struct bt_conn *conn, struct bt_bass_mod_src_param *param)</argsstring>
        <name>bt_bass_client_mod_src</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type>struct <ref refid="structbt__bass__mod__src__param" kindref="compound">bt_bass_mod_src_param</ref> *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Modify a source on the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the server. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter struct.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Error value. 0 on success, GATT error or ERRNO on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="268" column="5" declfile="include/bluetooth/audio/bass.h" declline="268" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bass_8h_1a9134f1059dba61cef092155eb80c4250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_bass_client_set_broadcast_code</definition>
        <argsstring>(struct bt_conn *conn, uint8_t src_id, uint8_t broadcast_code[16])</argsstring>
        <name>bt_bass_client_set_broadcast_code</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>src_id</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>broadcast_code</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
<para>Set a broadcast code to the specified receive state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the server. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Source ID of the receive state. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>broadcast_code</parametername>
</parameternamelist>
<parameterdescription>
<para>The broadcast code.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Error value. 0 on success, GATT error or ERRNO on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="279" column="5" declfile="include/bluetooth/audio/bass.h" declline="279" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bass_8h_1aa8fe2713f4563fdd5df2f0749c23e2a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_bass_client_rem_src</definition>
        <argsstring>(struct bt_conn *conn, uint8_t src_id)</argsstring>
        <name>bt_bass_client_rem_src</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>src_id</declname>
        </param>
        <briefdescription>
<para>Remove a source from the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the server. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Source ID of the receive state.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Error value. 0 on success, GATT error or ERRNO on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="289" column="5" declfile="include/bluetooth/audio/bass.h" declline="289" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="bass_8h_1a838f57e5f0026823a48c2fced164c57a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bt_bass_client_read_recv_state</definition>
        <argsstring>(struct bt_conn *conn, uint8_t idx)</argsstring>
        <name>bt_bass_client_read_recv_state</name>
        <param>
          <type>struct bt_conn *</type>
          <declname>conn</declname>
        </param>
        <param>
          <type><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Read the specified receive state from the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>conn</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection to the server. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the receive start (0 up to the value from bt_bass_client_discover_cb)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Error value. 0 on success, GATT error or ERRNO on fail. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/bluetooth/audio/bass.h" line="299" column="5" declfile="include/bluetooth/audio/bass.h" declline="299" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Header for Bluetooth BASS. </para>
    </briefdescription>
    <detaileddescription>
<para>Copyright (c) 2020 Bose Corporation Copyright (c) 2021 Nordic Semiconductor ASA</para>
<para>SPDX-License-Identifier: Apache-2.0 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ZEPHYR_INCLUDE_BLUETOOTH_AUDIO_BASS_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ZEPHYR_INCLUDE_BLUETOOTH_AUDIO_BASS_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="include_2zephyr_2types_8h" kindref="compound">zephyr/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="conn_8h" kindref="compound">bluetooth/conn.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>IS_ENABLED(CONFIG_BT_BASS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_MAX_METADATA_LEN<sp/>CONFIG_BT_BASS_MAX_METADATA_LEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_MAX_SUBGROUPS<sp/><sp/><sp/><sp/>CONFIG_BT_BASS_MAX_SUBGROUPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="bass_8h_1af7ea62a2a1430991edb2f342b9e7667b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_MAX_METADATA_LEN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="bass_8h_1aa89866bb234a0cb96c0013b784154160" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_MAX_SUBGROUPS<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="bass_8h_1a43ef70deb1c85eb1016bef92b19b2422" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_BROADCAST_CODE_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="bass_8h_1a2ba2fa0941c571835cb482e35e9a8922" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_PA_STATE_NOT_SYNCED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="bass_8h_1a6c50e707481330d3aac1e6dae3ae4430" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_PA_STATE_INFO_REQ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="bass_8h_1a721552b28038cb3d7961c6aa388f849d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_PA_STATE_SYNCED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="bass_8h_1af6c64713f1e506ea87882a496f01a6ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_PA_STATE_FAILED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x03</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="bass_8h_1ad6e4e0f172572c5bc0b2417ac65869ba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_PA_STATE_NO_PAST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x04</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="bass_8h_1afb176f5a1a78a8b42080463d56d436e1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_BIG_ENC_STATE_NO_ENC<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="bass_8h_1aadd7f475f9959cee0c138a1420d96cc0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_BIG_ENC_STATE_BCODE_REQ<sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="bass_8h_1aaa0542ec0653ea7481c9904f879aea97" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_BIG_ENC_STATE_DEC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="bass_8h_1a237491c6356be7e27e72fba7326d430f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_BIG_ENC_STATE_BAD_CODE<sp/><sp/><sp/><sp/><sp/>0x03</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="bass_8h_1ae14a0fd4732bf38e3f39ce0e665cd544" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_ERR_OPCODE_NOT_SUPPORTED<sp/><sp/><sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="bass_8h_1a5018fe72d5d4e6851ebb6f62256c6506" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_ERR_INVALID_SRC_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x81</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="bass_8h_1ab7e16e0879694a33dc35414178ae9c05" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_PA_INTERVAL_UNKNOWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="bass_8h_1aec8e435532e8120c1312cf888cacd4aa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_BROADCAST_MAX_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFFFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="bass_8h_1abc019a5313db91a36f13f4f2b09a8cb2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BT_BASS_BIS_SYNC_NO_PREF<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFFFFFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="structbt__bass__subgroup" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__bass__subgroup" kindref="compound">bt_bass_subgroup</ref><sp/>{</highlight></codeline>
<codeline lineno="46" refid="structbt__bass__subgroup_1a939c3b73d708205007a03c9621503e50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structbt__bass__subgroup_1a939c3b73d708205007a03c9621503e50" kindref="member">bis_sync</ref>;</highlight></codeline>
<codeline lineno="47" refid="structbt__bass__subgroup_1a69780bf39722226702341a329c70f285" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structbt__bass__subgroup_1a69780bf39722226702341a329c70f285" kindref="member">requested_bis_sync</ref>;</highlight></codeline>
<codeline lineno="48" refid="structbt__bass__subgroup_1a8d5a204179c17db848c0b7624bd5878e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__bass__subgroup_1a8d5a204179c17db848c0b7624bd5878e" kindref="member">metadata_len</ref>;</highlight></codeline>
<codeline lineno="49" refid="structbt__bass__subgroup_1a9093d22ff22589ae7e4fb84a2b63578b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__bass__subgroup_1a9093d22ff22589ae7e4fb84a2b63578b" kindref="member">metadata</ref>[<ref refid="bass_8h_1af7ea62a2a1430991edb2f342b9e7667b" kindref="member">BT_BASS_MAX_METADATA_LEN</ref>];</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>TODO:<sp/>Only<sp/>expose<sp/>this<sp/>as<sp/>an<sp/>opaque<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structbt__bass__recv__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__bass__recv__state" kindref="compound">bt_bass_recv_state</ref><sp/>{</highlight></codeline>
<codeline lineno="54" refid="structbt__bass__recv__state_1aafb8a7c8c86f58863d0a24dc80c20bc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__bass__recv__state_1aafb8a7c8c86f58863d0a24dc80c20bc2" kindref="member">src_id</ref>;</highlight></codeline>
<codeline lineno="55" refid="structbt__bass__recv__state_1a57b673219255d0eff6bcebcdc00a74db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__addr__le__t" kindref="compound">bt_addr_le_t</ref><sp/><ref refid="structbt__bass__recv__state_1a57b673219255d0eff6bcebcdc00a74db" kindref="member">addr</ref>;</highlight></codeline>
<codeline lineno="56" refid="structbt__bass__recv__state_1a449c9f2b71f8ffdaa0c887529212941c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__bass__recv__state_1a449c9f2b71f8ffdaa0c887529212941c" kindref="member">adv_sid</ref>;</highlight></codeline>
<codeline lineno="57" refid="structbt__bass__recv__state_1a7a2ef4f6fe825b2b683a8c61603f44d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__bass__recv__state_1a7a2ef4f6fe825b2b683a8c61603f44d8" kindref="member">req_pa_sync_value</ref>;</highlight></codeline>
<codeline lineno="58" refid="structbt__bass__recv__state_1a28bce2cc0c704a5782191dd957b9abba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__bass__recv__state_1a28bce2cc0c704a5782191dd957b9abba" kindref="member">pa_sync_state</ref>;</highlight></codeline>
<codeline lineno="59" refid="structbt__bass__recv__state_1ae647c4a19946d744f001336645fd2ea5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__bass__recv__state_1ae647c4a19946d744f001336645fd2ea5" kindref="member">encrypt_state</ref>;</highlight></codeline>
<codeline lineno="60" refid="structbt__bass__recv__state_1a97f39ee4b79d0de1b2761a006eadb2b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structbt__bass__recv__state_1a97f39ee4b79d0de1b2761a006eadb2b4" kindref="member">broadcast_id</ref>;<sp/></highlight><highlight class="comment">/*<sp/>24<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structbt__bass__recv__state_1a50635da10b346eb90d9a4d60d88c5284" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__bass__recv__state_1a50635da10b346eb90d9a4d60d88c5284" kindref="member">bad_code</ref>[<ref refid="bass_8h_1a43ef70deb1c85eb1016bef92b19b2422" kindref="member">BT_BASS_BROADCAST_CODE_SIZE</ref>];</highlight></codeline>
<codeline lineno="62" refid="structbt__bass__recv__state_1a28b4f764aaa6d88894e2186ce326b0fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__bass__recv__state_1a28b4f764aaa6d88894e2186ce326b0fe" kindref="member">num_subgroups</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__bass__subgroup" kindref="compound">bt_bass_subgroup</ref><sp/><ref refid="structbt__bass__recv__state_1a9ca89d89830a747e157c41ee4b734c32" kindref="member">subgroups</ref>[<ref refid="bass_8h_1aa89866bb234a0cb96c0013b784154160" kindref="member">BT_BASS_MAX_SUBGROUPS</ref>];</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="structbt__bass__cb" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__bass__cb" kindref="compound">bt_bass_cb</ref><sp/>{</highlight></codeline>
<codeline lineno="67" refid="structbt__bass__cb_1af47ff5ba382b8d0b33d87845650cf198" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structbt__bass__cb_1af47ff5ba382b8d0b33d87845650cf198" kindref="member">pa_synced</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__bass__recv__state" kindref="compound">bt_bass_recv_state</ref><sp/>*recv_state,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__le__per__adv__sync__synced__info" kindref="compound">bt_le_per_adv_sync_synced_info</ref><sp/>*info);</highlight></codeline>
<codeline lineno="69" refid="structbt__bass__cb_1aafe03311f7a254562ff6d0f162a29141" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structbt__bass__cb_1aafe03311f7a254562ff6d0f162a29141" kindref="member">pa_term</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__bass__recv__state" kindref="compound">bt_bass_recv_state</ref><sp/>*recv_state,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__le__per__adv__sync__term__info" kindref="compound">bt_le_per_adv_sync_term_info</ref><sp/>*info);</highlight></codeline>
<codeline lineno="71" refid="structbt__bass__cb_1ae2673297f55a36bf6ebd596afa43b6f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structbt__bass__cb_1ae2673297f55a36bf6ebd596afa43b6f0" kindref="member">pa_recv</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__bass__recv__state" kindref="compound">bt_bass_recv_state</ref><sp/>*recv_state,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__le__per__adv__sync__recv__info" kindref="compound">bt_le_per_adv_sync_recv_info</ref><sp/>*info,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnet__buf__simple" kindref="compound">net_buf_simple</ref><sp/>*buf);</highlight></codeline>
<codeline lineno="74" refid="structbt__bass__cb_1a3404974bc492d4ace09394f482ec298e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structbt__bass__cb_1a3404974bc492d4ace09394f482ec298e" kindref="member">biginfo</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__bass__recv__state" kindref="compound">bt_bass_recv_state</ref><sp/>*recv_state,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__iso__biginfo" kindref="compound">bt_iso_biginfo</ref><sp/>*<ref refid="structbt__bass__cb_1a3404974bc492d4ace09394f482ec298e" kindref="member">biginfo</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="bass_8h_1a9490a6432700e5bf5d6b367b973c89ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bass_8h_1a9490a6432700e5bf5d6b367b973c89ef" kindref="member">bt_bass_register_cb</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__bass__cb" kindref="compound">bt_bass_cb</ref><sp/>*cb);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="bass_8h_1acd57af5ac7e087d3ab1a0bd49cc54918" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bass_8h_1acd57af5ac7e087d3ab1a0bd49cc54918" kindref="member">bt_bass_set_sync_state</ref>(<ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>src_id,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>pa_sync_state,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>bis_synced[<ref refid="bass_8h_1aa89866bb234a0cb96c0013b784154160" kindref="member">BT_BASS_MAX_SUBGROUPS</ref>],</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>encrypted);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/********************************<sp/>CLIENT<sp/>API<sp/>********************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="bass_8h_1adf418ef28cdb2c38fddab9293041c04c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="bass_8h_1adf418ef28cdb2c38fddab9293041c04c" kindref="member">bt_bass_client_discover_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_conn<sp/>*conn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>recv_state_count);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="bass_8h_1a96d7b8cf0bee48409d575fa130faf488" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="bass_8h_1a96d7b8cf0bee48409d575fa130faf488" kindref="member">bt_bass_client_scan_cb</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__le__scan__recv__info" kindref="compound">bt_le_scan_recv_info</ref><sp/>*info,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/>broadcast_id);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="bass_8h_1a0bb7f977293267ce963c652ae3ed7bbb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="bass_8h_1a0bb7f977293267ce963c652ae3ed7bbb" kindref="member">bt_bass_client_recv_state_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_conn<sp/>*conn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__bass__recv__state" kindref="compound">bt_bass_recv_state</ref><sp/>*<ref refid="http__parser__state_8h_1adc6e5733fc3c22f0a7b2914188c49c90" kindref="member">state</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="bass_8h_1a751b83ba30e21a776cd2214ca63a06f6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="bass_8h_1a751b83ba30e21a776cd2214ca63a06f6" kindref="member">bt_bass_client_recv_state_rem_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_conn<sp/>*conn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>src_id);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="bass_8h_1a626b8e30a3bb1b06db8e112aeb20dde5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="bass_8h_1a626b8e30a3bb1b06db8e112aeb20dde5" kindref="member">bt_bass_client_write_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bt_conn<sp/>*conn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="structbt__bass__client__cb" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__bass__client__cb" kindref="compound">bt_bass_client_cb</ref><sp/>{</highlight></codeline>
<codeline lineno="154" refid="structbt__bass__client__cb_1a1b7844347afac3c098a2d99bf113681e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bass_8h_1adf418ef28cdb2c38fddab9293041c04c" kindref="member">bt_bass_client_discover_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__bass__client__cb_1a1b7844347afac3c098a2d99bf113681e" kindref="member">discover</ref>;</highlight></codeline>
<codeline lineno="155" refid="structbt__bass__client__cb_1ac31cc1ac3571ebe1666436bcb80a3275" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bass_8h_1a96d7b8cf0bee48409d575fa130faf488" kindref="member">bt_bass_client_scan_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__bass__client__cb_1ac31cc1ac3571ebe1666436bcb80a3275" kindref="member">scan</ref>;</highlight></codeline>
<codeline lineno="156" refid="structbt__bass__client__cb_1a2f60df48ae8fce6fab2ef18a4706c48c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bass_8h_1a0bb7f977293267ce963c652ae3ed7bbb" kindref="member">bt_bass_client_recv_state_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__bass__client__cb_1a2f60df48ae8fce6fab2ef18a4706c48c" kindref="member">recv_state</ref>;</highlight></codeline>
<codeline lineno="157" refid="structbt__bass__client__cb_1a41b78077fb5a7885abbee023b1b0e895" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bass_8h_1a751b83ba30e21a776cd2214ca63a06f6" kindref="member">bt_bass_client_recv_state_rem_cb</ref><sp/><sp/><ref refid="structbt__bass__client__cb_1a41b78077fb5a7885abbee023b1b0e895" kindref="member">recv_state_removed</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="structbt__bass__client__cb_1a4aee36701372e78b0e84a174b4f9709e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bass_8h_1a626b8e30a3bb1b06db8e112aeb20dde5" kindref="member">bt_bass_client_write_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__bass__client__cb_1a4aee36701372e78b0e84a174b4f9709e" kindref="member">scan_start</ref>;</highlight></codeline>
<codeline lineno="160" refid="structbt__bass__client__cb_1a3cbe6f052ff0cad7da6f8ad4f65f48d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bass_8h_1a626b8e30a3bb1b06db8e112aeb20dde5" kindref="member">bt_bass_client_write_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__bass__client__cb_1a3cbe6f052ff0cad7da6f8ad4f65f48d7" kindref="member">scan_stop</ref>;</highlight></codeline>
<codeline lineno="161" refid="structbt__bass__client__cb_1a8c2218e07e99d8cfc7e30a329ee16218" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bass_8h_1a626b8e30a3bb1b06db8e112aeb20dde5" kindref="member">bt_bass_client_write_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__bass__client__cb_1a8c2218e07e99d8cfc7e30a329ee16218" kindref="member">add_src</ref>;</highlight></codeline>
<codeline lineno="162" refid="structbt__bass__client__cb_1a365ddaa05302787936a2373f85585919" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bass_8h_1a626b8e30a3bb1b06db8e112aeb20dde5" kindref="member">bt_bass_client_write_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__bass__client__cb_1a365ddaa05302787936a2373f85585919" kindref="member">mod_src</ref>;</highlight></codeline>
<codeline lineno="163" refid="structbt__bass__client__cb_1aa3e6986a69d44f099da462eb04b69a1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bass_8h_1a626b8e30a3bb1b06db8e112aeb20dde5" kindref="member">bt_bass_client_write_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__bass__client__cb_1aa3e6986a69d44f099da462eb04b69a1b" kindref="member">broadcast_code</ref>;</highlight></codeline>
<codeline lineno="164" refid="structbt__bass__client__cb_1a366c2573b3d1d195ad7d20deacfb3848" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bass_8h_1a626b8e30a3bb1b06db8e112aeb20dde5" kindref="member">bt_bass_client_write_cb</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__bass__client__cb_1a366c2573b3d1d195ad7d20deacfb3848" kindref="member">rem_src</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="bass_8h_1a16cd52b6dfc7609551e08f2690cf9fbb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bass_8h_1a16cd52b6dfc7609551e08f2690cf9fbb" kindref="member">bt_bass_client_discover</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_conn<sp/>*conn);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="bass_8h_1a65cb05af05dfc59a54c778298f2b72b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bass_8h_1a65cb05af05dfc59a54c778298f2b72b0" kindref="member">bt_bass_client_scan_start</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_conn<sp/>*conn,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>start_scan);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="bass_8h_1adbd7ef34ce4f6969d850bd26ff882b57" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bass_8h_1adbd7ef34ce4f6969d850bd26ff882b57" kindref="member">bt_bass_client_scan_stop</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_conn<sp/>*conn);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="bass_8h_1aa2e5761a2dec7c225139e18d68dffbb1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bass_8h_1aa2e5761a2dec7c225139e18d68dffbb1" kindref="member">bt_bass_client_register_cb</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__bass__client__cb" kindref="compound">bt_bass_client_cb</ref><sp/>*cb);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="structbt__bass__add__src__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__bass__add__src__param" kindref="compound">bt_bass_add_src_param</ref><sp/>{</highlight></codeline>
<codeline lineno="213" refid="structbt__bass__add__src__param_1a7c8d46a1d7f2b0c707181518c330cd90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbt__addr__le__t" kindref="compound">bt_addr_le_t</ref><sp/><ref refid="structbt__bass__add__src__param_1a7c8d46a1d7f2b0c707181518c330cd90" kindref="member">addr</ref>;</highlight></codeline>
<codeline lineno="215" refid="structbt__bass__add__src__param_1a5febd6d0275587fbf7978086842dc5eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__bass__add__src__param_1a5febd6d0275587fbf7978086842dc5eb" kindref="member">adv_sid</ref>;</highlight></codeline>
<codeline lineno="217" refid="structbt__bass__add__src__param_1a8c5ebede2f4eee18b593e00fd84a67be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__bass__add__src__param_1a8c5ebede2f4eee18b593e00fd84a67be" kindref="member">pa_sync</ref>;</highlight></codeline>
<codeline lineno="219" refid="structbt__bass__add__src__param_1a4c2bd8f8b58e87cadfec1efdf730eca8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a0a8582351ac627ee8bde2973c825e47f" kindref="member">uint32_t</ref><sp/><ref refid="structbt__bass__add__src__param_1a4c2bd8f8b58e87cadfec1efdf730eca8" kindref="member">broadcast_id</ref>;</highlight></codeline>
<codeline lineno="225" refid="structbt__bass__add__src__param_1ad11dc753e81d480112ff82dc52cc7441" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structbt__bass__add__src__param_1ad11dc753e81d480112ff82dc52cc7441" kindref="member">pa_interval</ref>;</highlight></codeline>
<codeline lineno="227" refid="structbt__bass__add__src__param_1a8778c21a53b3c9bcb91ced5b71a12000" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__bass__add__src__param_1a8778c21a53b3c9bcb91ced5b71a12000" kindref="member">num_subgroups</ref>;</highlight></codeline>
<codeline lineno="229" refid="structbt__bass__add__src__param_1a388b036219aef1dbf651602e74082a08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__bass__subgroup" kindref="compound">bt_bass_subgroup</ref><sp/>*<ref refid="structbt__bass__add__src__param_1a388b036219aef1dbf651602e74082a08" kindref="member">subgroups</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="bass_8h_1a1111080d89c4154dcf7cc28862aa0128" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bass_8h_1a1111080d89c4154dcf7cc28862aa0128" kindref="member">bt_bass_client_add_src</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_conn<sp/>*conn,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__bass__add__src__param" kindref="compound">bt_bass_add_src_param</ref><sp/>*param);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="structbt__bass__mod__src__param" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__bass__mod__src__param" kindref="compound">bt_bass_mod_src_param</ref><sp/>{</highlight></codeline>
<codeline lineno="246" refid="structbt__bass__mod__src__param_1aa96e2f9c1697e3197bc79ded84c5e404" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__bass__mod__src__param_1aa96e2f9c1697e3197bc79ded84c5e404" kindref="member">src_id</ref>;</highlight></codeline>
<codeline lineno="248" refid="structbt__bass__mod__src__param_1a012038dc03e8544aa35a0d838d3e3c66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__bass__mod__src__param_1a012038dc03e8544aa35a0d838d3e3c66" kindref="member">pa_sync</ref>;</highlight></codeline>
<codeline lineno="254" refid="structbt__bass__mod__src__param_1a7cbeae0c358d93a1859981df49bb4f0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a5debae8b2a1ec20a6694c0c443ee399e" kindref="member">uint16_t</ref><sp/><ref refid="structbt__bass__mod__src__param_1a7cbeae0c358d93a1859981df49bb4f0c" kindref="member">pa_interval</ref>;</highlight></codeline>
<codeline lineno="256" refid="structbt__bass__mod__src__param_1ad2fa6285cfcaba113891b42689fcbb88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/><ref refid="structbt__bass__mod__src__param_1ad2fa6285cfcaba113891b42689fcbb88" kindref="member">num_subgroups</ref>;</highlight></codeline>
<codeline lineno="258" refid="structbt__bass__mod__src__param_1ae9b5ad5f0611d6459446d6dc7d9aacb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbt__bass__subgroup" kindref="compound">bt_bass_subgroup</ref><sp/>*<ref refid="structbt__bass__mod__src__param_1ae9b5ad5f0611d6459446d6dc7d9aacb3" kindref="member">subgroups</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="bass_8h_1addb14a6399e40d30409e6169d627125f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bass_8h_1addb14a6399e40d30409e6169d627125f" kindref="member">bt_bass_client_mod_src</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_conn<sp/>*conn,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbt__bass__mod__src__param" kindref="compound">bt_bass_mod_src_param</ref><sp/>*param);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="bass_8h_1a9134f1059dba61cef092155eb80c4250" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bass_8h_1a9134f1059dba61cef092155eb80c4250" kindref="member">bt_bass_client_set_broadcast_code</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_conn<sp/>*conn,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>src_id,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>broadcast_code[<ref refid="bass_8h_1a43ef70deb1c85eb1016bef92b19b2422" kindref="member">BT_BASS_BROADCAST_CODE_SIZE</ref>]);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="bass_8h_1aa8fe2713f4563fdd5df2f0749c23e2a8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bass_8h_1aa8fe2713f4563fdd5df2f0749c23e2a8" kindref="member">bt_bass_client_rem_src</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_conn<sp/>*conn,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>src_id);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="bass_8h_1a838f57e5f0026823a48c2fced164c57a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bass_8h_1a838f57e5f0026823a48c2fced164c57a" kindref="member">bt_bass_client_read_recv_state</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bt_conn<sp/>*conn,<sp/><ref refid="stdint_8h_1a3cb4a16b0e8d6af0af86d4fd6ba5fd9d" kindref="member">uint8_t</ref><sp/>idx);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ZEPHYR_INCLUDE_BLUETOOTH_AUDIO_BASS_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="include/bluetooth/audio/bass.h"/>
  </compounddef>
</doxygen>
